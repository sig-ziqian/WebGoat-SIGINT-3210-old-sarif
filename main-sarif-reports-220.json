{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Polaris",
          "organization": "Black Duck",
          "rules": [
            {
              "id": "spring-aop 6.2.5: spring-boot-starter-security 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-aop 6.2.5 from spring-boot-starter-security 3.4.4"
              },
              "fullDescription": {
                "text": "spring-aop 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-security:3.4.4\n        - org.springframework:spring-aop:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-aop 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-security-core 6.4.4: spring-boot-starter-oauth2-client 3.4.4: org.springframework.security",
              "shortDescription": {
                "text": "Transitive Dependency: spring-security-core 6.4.4 from spring-boot-starter-oauth2-client 3.4.4"
              },
              "fullDescription": {
                "text": "spring-security-core 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 6.4.4  | 6.5.1  | 6.5.1 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/03a2b951-5317-493b-8752-7fca82e4a78c?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :orange_circle: | [CVE-2025-41232](https://nvd.nist.gov/vuln/detail/CVE-2025-41232) | Missing or Broken Authorization Mechanism | Yes | - |\n| :yellow_circle: | [CVE-2025-22228](https://nvd.nist.gov/vuln/detail/CVE-2025-22228) | Improper Authentication | Yes | - |\n| :yellow_circle: | [BDSA-2025-3483](https://openhub.net/vulnerabilities/bdsa/BDSA-2025-3483) | Sensitive Data Exposure | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-oauth2-client:3.4.4\n        - org.springframework.security:spring-security-core:6.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-208](https://cwe.mitre.org/data/definitions/208.html)\n\n",
                "text": "spring-security-core 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-285",
                  "external/cwe/cwe-287",
                  "external/cwe/cwe-200",
                  "external/cwe/cwe-208"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "spring-jdbc 6.2.5: spring-boot-starter-data-jpa 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-jdbc 6.2.5 from spring-boot-starter-data-jpa 3.4.4"
              },
              "fullDescription": {
                "text": "spring-jdbc 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.4.4\n        - org.springframework.boot:spring-boot-starter-jdbc:3.4.4\n            - org.springframework:spring-jdbc:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-jdbc 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-beans 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-beans 6.2.5 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "spring-beans 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework:spring-web:6.2.5\n            - org.springframework:spring-beans:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-beans 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "tomcat-embed-el 10.1.39: spring-boot-starter-validation 3.4.4: org.apache.tomcat.embed",
              "shortDescription": {
                "text": "Transitive Dependency: tomcat-embed-el 10.1.39 from spring-boot-starter-validation 3.4.4"
              },
              "fullDescription": {
                "text": "tomcat-embed-el 10.1.39 has the following vulnerabilities: [:yellow_circle:] CVE-2025-31650, [:yellow_circle:] CVE-2025-31651, [:yellow_circle:] BDSA-2025-4728, [:yellow_circle:] CVE-2025-48988, [:yellow_circle:] CVE-2025-49124, [:yellow_circle:] CVE-2025-49125"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-el 10.1.39  | 10.1.42  | 11.0.5 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/4d1d72e2-8135-453d-af4d-14049bb51259?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=5a7e1c49-9a98-4393-b4e0-8011122bbe2f)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-31650](https://nvd.nist.gov/vuln/detail/CVE-2025-31650) | Weak Input Validation | Yes | - |\n| :yellow_circle: | [CVE-2025-31651](https://nvd.nist.gov/vuln/detail/CVE-2025-31651) | Improper Neutralization of Escape, Meta, or Control Sequences | Yes | - |\n| :yellow_circle: | [BDSA-2025-4728](https://openhub.net/vulnerabilities/bdsa/BDSA-2025-4728) | Improper Handling of Case Sensitivity | Yes | - |\n| :yellow_circle: | [CVE-2025-48988](https://nvd.nist.gov/vuln/detail/CVE-2025-48988) | Uncontrolled Resource Consumption | Yes | - |\n| :yellow_circle: | [CVE-2025-49124](https://nvd.nist.gov/vuln/detail/CVE-2025-49124) | Untrusted Search Path | Yes | - |\n| :yellow_circle: | [CVE-2025-49125](https://nvd.nist.gov/vuln/detail/CVE-2025-49125) | Authentication Bypass Using an Alternate Path or Channel | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.4.4\n        - org.apache.tomcat.embed:tomcat-embed-el:10.1.39\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n* Common Weakness Enumeration: [CWE-150](https://cwe.mitre.org/data/definitions/150.html)\n* Common Weakness Enumeration: [CWE-178](https://cwe.mitre.org/data/definitions/178.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-426](https://cwe.mitre.org/data/definitions/426.html)\n* Common Weakness Enumeration: [CWE-288](https://cwe.mitre.org/data/definitions/288.html)\n\n",
                "text": "tomcat-embed-el 10.1.39 has the following vulnerabilities: [:yellow_circle:] CVE-2025-31650, [:yellow_circle:] CVE-2025-31651, [:yellow_circle:] BDSA-2025-4728, [:yellow_circle:] CVE-2025-48988, [:yellow_circle:] CVE-2025-49124, [:yellow_circle:] CVE-2025-49125"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-20",
                  "external/cwe/cwe-150",
                  "external/cwe/cwe-178",
                  "external/cwe/cwe-400",
                  "external/cwe/cwe-426",
                  "external/cwe/cwe-288"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "dirgra 0.5: asciidoctorj 3.0.0: org.jruby",
              "shortDescription": {
                "text": "Transitive Dependency: dirgra 0.5 from asciidoctorj 3.0.0"
              },
              "fullDescription": {
                "text": "dirgra 0.5 has the following vulnerabilities: [:orange_circle:] CVE-2009-4123"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| dirgra 0.5  | 0.6  | 0.6 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7d8bfc07-da0e-41a6-92f0-1ed1d205af33?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=29aac4eb-5d82-4d22-a6ce-43f61ec2f288)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :orange_circle: | [CVE-2009-4123](https://nvd.nist.gov/vuln/detail/CVE-2009-4123) | Improper Certificate Validation | - | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.asciidoctor:asciidoctorj:3.0.0\n        - org.jruby:jruby:10.0.0.1\n            - org.jruby:jruby-base:10.0.0.1\n                - org.jruby:dirgra:0.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-295](https://cwe.mitre.org/data/definitions/295.html)\n\n",
                "text": "dirgra 0.5 has the following vulnerabilities: [:orange_circle:] CVE-2009-4123"
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-295"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "spring-test 6.2.5: spring-boot-starter-test 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-test 6.2.5 from spring-boot-starter-test 3.4.4"
              },
              "fullDescription": {
                "text": "spring-test 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-test:3.4.4\n        - org.springframework:spring-test:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-test 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-data-jpa 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Direct Dependency: spring-boot-starter-data-jpa 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-data-jpa 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-data-jpa 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-aspects 6.2.5: spring-boot-starter-data-jpa 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-aspects 6.2.5 from spring-boot-starter-data-jpa 3.4.4"
              },
              "fullDescription": {
                "text": "spring-aspects 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.4.4\n        - org.springframework:spring-aspects:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-aspects 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-web 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Direct Dependency: spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-web 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-web 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-jdbc 3.4.4: spring-boot-starter-data-jpa 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Transitive Dependency: spring-boot-starter-jdbc 3.4.4 from spring-boot-starter-data-jpa 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-jdbc 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.4.4\n        - org.springframework.boot:spring-boot-starter-jdbc:3.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-jdbc 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "xstream 1.4.5: com.thoughtworks.xstream",
              "shortDescription": {
                "text": "Direct Dependency: xstream 1.4.5"
              },
              "fullDescription": {
                "text": "xstream 1.4.5 has the following vulnerabilities: [:red_circle:] CVE-2013-7285, [:red_circle:] CVE-2019-10173, [:red_circle:] CVE-2021-39148, [:red_circle:] CVE-2020-26217, [:red_circle:] CVE-2021-39147, [:red_circle:] CVE-2021-39146, [:red_circle:] CVE-2021-39145, [:red_circle:] CVE-2021-39139, [:red_circle:] CVE-2021-39141, [:red_circle:] CVE-2021-39154, [:red_circle:] CVE-2021-39144, [:orange_circle:] CVE-2021-39149, [:orange_circle:] CVE-2021-21347, [:orange_circle:] CVE-2022-40152, [:orange_circle:] CVE-2016-3674, [:orange_circle:] CVE-2021-21342, [:orange_circle:] CVE-2020-26259, [:orange_circle:] CVE-2021-29505, [:orange_circle:] CVE-2021-21344, [:orange_circle:] CVE-2021-39151, [:orange_circle:] CVE-2021-21345, [:orange_circle:] CVE-2021-21346, [:orange_circle:] CVE-2021-39153, [:orange_circle:] CVE-2021-21350, [:orange_circle:] CVE-2021-21349, [:orange_circle:] CVE-2020-26258, [:orange_circle:] CVE-2021-39150, [:orange_circle:] CVE-2021-39152, [:orange_circle:] CVE-2021-21351, [:yellow_circle:] CVE-2021-39140, [:yellow_circle:] CVE-2021-21341, [:yellow_circle:] CVE-2017-7957, [:yellow_circle:] CVE-2021-43859, [:yellow_circle:] CVE-2022-40151, [:yellow_circle:] CVE-2022-41966, [:yellow_circle:] CVE-2024-47072, [:yellow_circle:] CVE-2021-21348, [:yellow_circle:] CVE-2021-21343"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :red_circle: | [CVE-2013-7285](https://nvd.nist.gov/vuln/detail/CVE-2013-7285) | Insecure Object Deserialization | Yes | Yes |\n| :red_circle: | [CVE-2019-10173](https://nvd.nist.gov/vuln/detail/CVE-2019-10173) | Improper Control of Generation of Code ('Code Injection') | - | - |\n| :red_circle: | [CVE-2021-39148](https://nvd.nist.gov/vuln/detail/CVE-2021-39148) | Insecure Object Deserialization | Yes | Yes |\n| :red_circle: | [CVE-2020-26217](https://nvd.nist.gov/vuln/detail/CVE-2020-26217) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :red_circle: | [CVE-2021-39147](https://nvd.nist.gov/vuln/detail/CVE-2021-39147) | Insecure Object Deserialization | Yes | Yes |\n| :red_circle: | [CVE-2021-39146](https://nvd.nist.gov/vuln/detail/CVE-2021-39146) | Insecure Object Deserialization | Yes | Yes |\n| :red_circle: | [CVE-2021-39145](https://nvd.nist.gov/vuln/detail/CVE-2021-39145) | Insecure Object Deserialization | Yes | Yes |\n| :red_circle: | [CVE-2021-39139](https://nvd.nist.gov/vuln/detail/CVE-2021-39139) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :red_circle: | [CVE-2021-39141](https://nvd.nist.gov/vuln/detail/CVE-2021-39141) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :red_circle: | [CVE-2021-39154](https://nvd.nist.gov/vuln/detail/CVE-2021-39154) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :red_circle: | [CVE-2021-39144](https://nvd.nist.gov/vuln/detail/CVE-2021-39144) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :orange_circle: | [CVE-2021-39149](https://nvd.nist.gov/vuln/detail/CVE-2021-39149) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-21347](https://nvd.nist.gov/vuln/detail/CVE-2021-21347) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2022-40152](https://nvd.nist.gov/vuln/detail/CVE-2022-40152) | Out-of-bounds Write | - | - |\n| :orange_circle: | [CVE-2016-3674](https://nvd.nist.gov/vuln/detail/CVE-2016-3674) | XML External Entity (XXE) Injection | Yes | Yes |\n| :orange_circle: | [CVE-2021-21342](https://nvd.nist.gov/vuln/detail/CVE-2021-21342) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2020-26259](https://nvd.nist.gov/vuln/detail/CVE-2020-26259) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :orange_circle: | [CVE-2021-29505](https://nvd.nist.gov/vuln/detail/CVE-2021-29505) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-21344](https://nvd.nist.gov/vuln/detail/CVE-2021-21344) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-39151](https://nvd.nist.gov/vuln/detail/CVE-2021-39151) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-21345](https://nvd.nist.gov/vuln/detail/CVE-2021-21345) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-21346](https://nvd.nist.gov/vuln/detail/CVE-2021-21346) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-39153](https://nvd.nist.gov/vuln/detail/CVE-2021-39153) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-21350](https://nvd.nist.gov/vuln/detail/CVE-2021-21350) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-21349](https://nvd.nist.gov/vuln/detail/CVE-2021-21349) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :orange_circle: | [CVE-2020-26258](https://nvd.nist.gov/vuln/detail/CVE-2020-26258) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-39150](https://nvd.nist.gov/vuln/detail/CVE-2021-39150) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-39152](https://nvd.nist.gov/vuln/detail/CVE-2021-39152) | Insecure Object Deserialization | Yes | Yes |\n| :orange_circle: | [CVE-2021-21351](https://nvd.nist.gov/vuln/detail/CVE-2021-21351) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :yellow_circle: | [CVE-2021-39140](https://nvd.nist.gov/vuln/detail/CVE-2021-39140) | Incomplete List of Disallowed Inputs | Yes | Yes |\n| :yellow_circle: | [CVE-2021-21341](https://nvd.nist.gov/vuln/detail/CVE-2021-21341) | Insecure Object Deserialization | Yes | Yes |\n| :yellow_circle: | [CVE-2017-7957](https://nvd.nist.gov/vuln/detail/CVE-2017-7957) | Weak Input Validation | Yes | Yes |\n| :yellow_circle: | [CVE-2021-43859](https://nvd.nist.gov/vuln/detail/CVE-2021-43859) | Uncontrolled Resource Consumption | Yes | Yes |\n| :yellow_circle: | [CVE-2022-40151](https://nvd.nist.gov/vuln/detail/CVE-2022-40151) | Stack-based Buffer Overflow | Yes | - |\n| :yellow_circle: | [CVE-2022-41966](https://nvd.nist.gov/vuln/detail/CVE-2022-41966) | Insecure Object Deserialization | Yes | Yes |\n| :yellow_circle: | [CVE-2024-47072](https://nvd.nist.gov/vuln/detail/CVE-2024-47072) | Uncontrolled Resource Consumption | Yes | Yes |\n| :yellow_circle: | [CVE-2021-21348](https://nvd.nist.gov/vuln/detail/CVE-2021-21348) | Incorrect Regular Expression | Yes | Yes |\n| :yellow_circle: | [CVE-2021-21343](https://nvd.nist.gov/vuln/detail/CVE-2021-21343) | Insecure Object Deserialization | Yes | Yes |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-94](https://cwe.mitre.org/data/definitions/94.html)\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-787](https://cwe.mitre.org/data/definitions/787.html)\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n* Common Weakness Enumeration: [CWE-776](https://cwe.mitre.org/data/definitions/776.html)\n* Common Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n* Common Weakness Enumeration: [CWE-77](https://cwe.mitre.org/data/definitions/77.html)\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n* Common Weakness Enumeration: [CWE-674](https://cwe.mitre.org/data/definitions/674.html)\n* Common Weakness Enumeration: [CWE-185](https://cwe.mitre.org/data/definitions/185.html)\n\n",
                "text": "xstream 1.4.5 has the following vulnerabilities: [:red_circle:] CVE-2013-7285, [:red_circle:] CVE-2019-10173, [:red_circle:] CVE-2021-39148, [:red_circle:] CVE-2020-26217, [:red_circle:] CVE-2021-39147, [:red_circle:] CVE-2021-39146, [:red_circle:] CVE-2021-39145, [:red_circle:] CVE-2021-39139, [:red_circle:] CVE-2021-39141, [:red_circle:] CVE-2021-39154, [:red_circle:] CVE-2021-39144, [:orange_circle:] CVE-2021-39149, [:orange_circle:] CVE-2021-21347, [:orange_circle:] CVE-2022-40152, [:orange_circle:] CVE-2016-3674, [:orange_circle:] CVE-2021-21342, [:orange_circle:] CVE-2020-26259, [:orange_circle:] CVE-2021-29505, [:orange_circle:] CVE-2021-21344, [:orange_circle:] CVE-2021-39151, [:orange_circle:] CVE-2021-21345, [:orange_circle:] CVE-2021-21346, [:orange_circle:] CVE-2021-39153, [:orange_circle:] CVE-2021-21350, [:orange_circle:] CVE-2021-21349, [:orange_circle:] CVE-2020-26258, [:orange_circle:] CVE-2021-39150, [:orange_circle:] CVE-2021-39152, [:orange_circle:] CVE-2021-21351, [:yellow_circle:] CVE-2021-39140, [:yellow_circle:] CVE-2021-21341, [:yellow_circle:] CVE-2017-7957, [:yellow_circle:] CVE-2021-43859, [:yellow_circle:] CVE-2022-40151, [:yellow_circle:] CVE-2022-41966, [:yellow_circle:] CVE-2024-47072, [:yellow_circle:] CVE-2021-21348, [:yellow_circle:] CVE-2021-21343"
              },
              "properties": {
                "security-severity": "9.1",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-502",
                  "external/cwe/cwe-94",
                  "external/cwe/cwe-184",
                  "external/cwe/cwe-787",
                  "external/cwe/cwe-611",
                  "external/cwe/cwe-776"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "spring-boot-starter-logging 3.4.4: spring-boot-starter-validation 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Transitive Dependency: spring-boot-starter-logging 3.4.4 from spring-boot-starter-validation 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-logging 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.4.4\n        - org.springframework.boot:spring-boot-starter:3.4.4\n            - org.springframework.boot:spring-boot-starter-logging:3.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-logging 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-json 3.4.4: spring-boot-starter-web 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Transitive Dependency: spring-boot-starter-json 3.4.4 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-json 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework.boot:spring-boot-starter-json:3.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-json 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-tx 6.2.5: spring-boot-starter-data-jpa 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-tx 6.2.5 from spring-boot-starter-data-jpa 3.4.4"
              },
              "fullDescription": {
                "text": "spring-tx 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.4.4\n        - org.springframework.data:spring-data-jpa:3.4.4\n            - org.springframework:spring-tx:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-tx 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-security 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Direct Dependency: spring-boot-starter-security 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-security 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-security 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-webmvc 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-webmvc 6.2.5 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "spring-webmvc 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework:spring-webmvc:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-webmvc 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-security-crypto 6.4.4: spring-boot-starter-oauth2-client 3.4.4: org.springframework.security",
              "shortDescription": {
                "text": "Transitive Dependency: spring-security-crypto 6.4.4 from spring-boot-starter-oauth2-client 3.4.4"
              },
              "fullDescription": {
                "text": "spring-security-crypto 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-crypto 6.4.4  | 6.5.1  | 6.5.1 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/03a2b951-5317-493b-8752-7fca82e4a78c?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :orange_circle: | [CVE-2025-41232](https://nvd.nist.gov/vuln/detail/CVE-2025-41232) | Missing or Broken Authorization Mechanism | Yes | - |\n| :yellow_circle: | [CVE-2025-22228](https://nvd.nist.gov/vuln/detail/CVE-2025-22228) | Improper Authentication | Yes | - |\n| :yellow_circle: | [BDSA-2025-3483](https://openhub.net/vulnerabilities/bdsa/BDSA-2025-3483) | Sensitive Data Exposure | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-oauth2-client:3.4.4\n        - org.springframework.security:spring-security-core:6.4.4\n            - org.springframework.security:spring-security-crypto:6.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-208](https://cwe.mitre.org/data/definitions/208.html)\n\n",
                "text": "spring-security-crypto 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-285",
                  "external/cwe/cwe-287",
                  "external/cwe/cwe-200",
                  "external/cwe/cwe-208"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "spring-boot-starter-actuator 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Direct Dependency: spring-boot-starter-actuator 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-actuator 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-actuator 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-test 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Direct Dependency: spring-boot-starter-test 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-test 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-test 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-autoconfigure 3.4.4: spring-boot-starter-validation 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Transitive Dependency: spring-boot-autoconfigure 3.4.4 from spring-boot-starter-validation 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-autoconfigure 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.4.4\n        - org.springframework.boot:spring-boot-starter:3.4.4\n            - org.springframework.boot:spring-boot-autoconfigure:3.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-autoconfigure 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-context 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-context 6.2.5 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "spring-context 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework:spring-webmvc:6.2.5\n            - org.springframework:spring-context:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-context 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-expression 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-expression 6.2.5 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "spring-expression 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework:spring-webmvc:6.2.5\n            - org.springframework:spring-expression:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-expression 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot 3.4.4: spring-boot-properties-migrator 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Transitive Dependency: spring-boot 3.4.4 from spring-boot-properties-migrator 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-properties-migrator:3.4.4\n        - org.springframework.boot:spring-boot:3.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "tomcat-embed-core 10.1.39: spring-boot-starter-web 3.4.4: org.apache.tomcat.embed",
              "shortDescription": {
                "text": "Transitive Dependency: tomcat-embed-core 10.1.39 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "tomcat-embed-core 10.1.39 has the following vulnerabilities: [:yellow_circle:] CVE-2025-31650, [:yellow_circle:] CVE-2025-31651, [:yellow_circle:] BDSA-2025-4728, [:yellow_circle:] CVE-2025-48988, [:yellow_circle:] CVE-2025-49124, [:yellow_circle:] CVE-2025-49125"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-core 10.1.39  | 10.1.42  | 11.0.5 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/4d1d72e2-8135-453d-af4d-14049bb51259?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=5a7e1c49-9a98-4393-b4e0-8011122bbe2f)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-31650](https://nvd.nist.gov/vuln/detail/CVE-2025-31650) | Weak Input Validation | Yes | - |\n| :yellow_circle: | [CVE-2025-31651](https://nvd.nist.gov/vuln/detail/CVE-2025-31651) | Improper Neutralization of Escape, Meta, or Control Sequences | Yes | - |\n| :yellow_circle: | [BDSA-2025-4728](https://openhub.net/vulnerabilities/bdsa/BDSA-2025-4728) | Improper Handling of Case Sensitivity | Yes | - |\n| :yellow_circle: | [CVE-2025-48988](https://nvd.nist.gov/vuln/detail/CVE-2025-48988) | Uncontrolled Resource Consumption | Yes | - |\n| :yellow_circle: | [CVE-2025-49124](https://nvd.nist.gov/vuln/detail/CVE-2025-49124) | Untrusted Search Path | Yes | - |\n| :yellow_circle: | [CVE-2025-49125](https://nvd.nist.gov/vuln/detail/CVE-2025-49125) | Authentication Bypass Using an Alternate Path or Channel | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework.boot:spring-boot-starter-tomcat:3.4.4\n            - org.apache.tomcat.embed:tomcat-embed-core:10.1.39\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n* Common Weakness Enumeration: [CWE-150](https://cwe.mitre.org/data/definitions/150.html)\n* Common Weakness Enumeration: [CWE-178](https://cwe.mitre.org/data/definitions/178.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-426](https://cwe.mitre.org/data/definitions/426.html)\n* Common Weakness Enumeration: [CWE-288](https://cwe.mitre.org/data/definitions/288.html)\n\n",
                "text": "tomcat-embed-core 10.1.39 has the following vulnerabilities: [:yellow_circle:] CVE-2025-31650, [:yellow_circle:] CVE-2025-31651, [:yellow_circle:] BDSA-2025-4728, [:yellow_circle:] CVE-2025-48988, [:yellow_circle:] CVE-2025-49124, [:yellow_circle:] CVE-2025-49125"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-20",
                  "external/cwe/cwe-150",
                  "external/cwe/cwe-178",
                  "external/cwe/cwe-400",
                  "external/cwe/cwe-426",
                  "external/cwe/cwe-288"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-validation 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Direct Dependency: spring-boot-starter-validation 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-validation 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-validation 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "tomcat-embed-websocket 10.1.39: spring-boot-starter-web 3.4.4: org.apache.tomcat.embed",
              "shortDescription": {
                "text": "Transitive Dependency: tomcat-embed-websocket 10.1.39 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "tomcat-embed-websocket 10.1.39 has the following vulnerabilities: [:yellow_circle:] CVE-2025-31650, [:yellow_circle:] CVE-2025-31651, [:yellow_circle:] BDSA-2025-4728, [:yellow_circle:] CVE-2025-48988, [:yellow_circle:] CVE-2025-49124, [:yellow_circle:] CVE-2025-49125"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-websocket 10.1.39  | 10.1.42  | 11.0.5 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/4d1d72e2-8135-453d-af4d-14049bb51259?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=5a7e1c49-9a98-4393-b4e0-8011122bbe2f)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-31650](https://nvd.nist.gov/vuln/detail/CVE-2025-31650) | Weak Input Validation | Yes | - |\n| :yellow_circle: | [CVE-2025-31651](https://nvd.nist.gov/vuln/detail/CVE-2025-31651) | Improper Neutralization of Escape, Meta, or Control Sequences | Yes | - |\n| :yellow_circle: | [BDSA-2025-4728](https://openhub.net/vulnerabilities/bdsa/BDSA-2025-4728) | Improper Handling of Case Sensitivity | Yes | - |\n| :yellow_circle: | [CVE-2025-48988](https://nvd.nist.gov/vuln/detail/CVE-2025-48988) | Uncontrolled Resource Consumption | Yes | - |\n| :yellow_circle: | [CVE-2025-49124](https://nvd.nist.gov/vuln/detail/CVE-2025-49124) | Untrusted Search Path | Yes | - |\n| :yellow_circle: | [CVE-2025-49125](https://nvd.nist.gov/vuln/detail/CVE-2025-49125) | Authentication Bypass Using an Alternate Path or Channel | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework.boot:spring-boot-starter-tomcat:3.4.4\n            - org.apache.tomcat.embed:tomcat-embed-websocket:10.1.39\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n* Common Weakness Enumeration: [CWE-150](https://cwe.mitre.org/data/definitions/150.html)\n* Common Weakness Enumeration: [CWE-178](https://cwe.mitre.org/data/definitions/178.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-426](https://cwe.mitre.org/data/definitions/426.html)\n* Common Weakness Enumeration: [CWE-288](https://cwe.mitre.org/data/definitions/288.html)\n\n",
                "text": "tomcat-embed-websocket 10.1.39 has the following vulnerabilities: [:yellow_circle:] CVE-2025-31650, [:yellow_circle:] CVE-2025-31651, [:yellow_circle:] BDSA-2025-4728, [:yellow_circle:] CVE-2025-48988, [:yellow_circle:] CVE-2025-49124, [:yellow_circle:] CVE-2025-49125"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-20",
                  "external/cwe/cwe-150",
                  "external/cwe/cwe-178",
                  "external/cwe/cwe-400",
                  "external/cwe/cwe-426",
                  "external/cwe/cwe-288"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-security-web 6.4.4: spring-boot-starter-security 3.4.4: org.springframework.security",
              "shortDescription": {
                "text": "Transitive Dependency: spring-security-web 6.4.4 from spring-boot-starter-security 3.4.4"
              },
              "fullDescription": {
                "text": "spring-security-web 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 6.4.4  | 6.5.1  | 6.5.1 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/03a2b951-5317-493b-8752-7fca82e4a78c?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :orange_circle: | [CVE-2025-41232](https://nvd.nist.gov/vuln/detail/CVE-2025-41232) | Missing or Broken Authorization Mechanism | Yes | - |\n| :yellow_circle: | [CVE-2025-22228](https://nvd.nist.gov/vuln/detail/CVE-2025-22228) | Improper Authentication | Yes | - |\n| :yellow_circle: | [BDSA-2025-3483](https://openhub.net/vulnerabilities/bdsa/BDSA-2025-3483) | Sensitive Data Exposure | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-security:3.4.4\n        - org.springframework.security:spring-security-web:6.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-208](https://cwe.mitre.org/data/definitions/208.html)\n\n",
                "text": "spring-security-web 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-285",
                  "external/cwe/cwe-287",
                  "external/cwe/cwe-200",
                  "external/cwe/cwe-208"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "spring-orm 6.2.5: spring-boot-starter-data-jpa 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-orm 6.2.5 from spring-boot-starter-data-jpa 3.4.4"
              },
              "fullDescription": {
                "text": "spring-orm 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.4.4\n        - org.springframework.data:spring-data-jpa:3.4.4\n            - org.springframework:spring-orm:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-orm 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-tomcat 3.4.4: spring-boot-starter-web 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Transitive Dependency: spring-boot-starter-tomcat 3.4.4 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-tomcat 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-tomcat 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework.boot:spring-boot-starter-tomcat:3.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-tomcat 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter-thymeleaf 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Direct Dependency: spring-boot-starter-thymeleaf 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter-thymeleaf 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter-thymeleaf 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-boot-starter 3.4.4: spring-boot-starter-validation 3.4.4: org.springframework.boot",
              "shortDescription": {
                "text": "Transitive Dependency: spring-boot-starter 3.4.4 from spring-boot-starter-validation 3.4.4"
              },
              "fullDescription": {
                "text": "spring-boot-starter 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 3.4.4  | 3.5.3  | 3.5.3 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/7699bc98-0707-4b9b-9d2b-9a0a2a610711?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-22235](https://nvd.nist.gov/vuln/detail/CVE-2025-22235) | Improper Null Termination | Yes | Yes |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.4.4\n        - org.springframework.boot:spring-boot-starter:3.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-170](https://cwe.mitre.org/data/definitions/170.html)\n\n",
                "text": "spring-boot-starter 3.4.4 has the following vulnerabilities: [:yellow_circle:] CVE-2025-22235"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-170"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-security-config 6.4.4: spring-boot-starter-security 3.4.4: org.springframework.security",
              "shortDescription": {
                "text": "Transitive Dependency: spring-security-config 6.4.4 from spring-boot-starter-security 3.4.4"
              },
              "fullDescription": {
                "text": "spring-security-config 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 6.4.4  | 6.5.1  | 6.5.1 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/03a2b951-5317-493b-8752-7fca82e4a78c?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :orange_circle: | [CVE-2025-41232](https://nvd.nist.gov/vuln/detail/CVE-2025-41232) | Missing or Broken Authorization Mechanism | Yes | - |\n| :yellow_circle: | [CVE-2025-22228](https://nvd.nist.gov/vuln/detail/CVE-2025-22228) | Improper Authentication | Yes | - |\n| :yellow_circle: | [BDSA-2025-3483](https://openhub.net/vulnerabilities/bdsa/BDSA-2025-3483) | Sensitive Data Exposure | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-security:3.4.4\n        - org.springframework.security:spring-security-config:6.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-208](https://cwe.mitre.org/data/definitions/208.html)\n\n",
                "text": "spring-security-config 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-285",
                  "external/cwe/cwe-287",
                  "external/cwe/cwe-200",
                  "external/cwe/cwe-208"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "spring-security-test 6.4.4: org.springframework.security",
              "shortDescription": {
                "text": "Direct Dependency: spring-security-test 6.4.4"
              },
              "fullDescription": {
                "text": "spring-security-test 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 6.4.4  | 6.5.1  | 6.5.1 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/03a2b951-5317-493b-8752-7fca82e4a78c?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :orange_circle: | [CVE-2025-41232](https://nvd.nist.gov/vuln/detail/CVE-2025-41232) | Missing or Broken Authorization Mechanism | Yes | - |\n| :yellow_circle: | [CVE-2025-22228](https://nvd.nist.gov/vuln/detail/CVE-2025-22228) | Improper Authentication | Yes | - |\n| :yellow_circle: | [BDSA-2025-3483](https://openhub.net/vulnerabilities/bdsa/BDSA-2025-3483) | Sensitive Data Exposure | Yes | - |\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-208](https://cwe.mitre.org/data/definitions/208.html)\n\n",
                "text": "spring-security-test 6.4.4 has the following vulnerabilities: [:orange_circle:] CVE-2025-41232, [:yellow_circle:] CVE-2025-22228, [:yellow_circle:] BDSA-2025-3483"
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "direct_dependency",
                  "patch_available",
                  "external/cwe/cwe-285",
                  "external/cwe/cwe-287",
                  "external/cwe/cwe-200",
                  "external/cwe/cwe-208"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "spring-web 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-web 6.2.5 from spring-boot-starter-web 3.4.4"
              },
              "fullDescription": {
                "text": "spring-web 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.4.4\n        - org.springframework:spring-web:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-web 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "spring-core 6.2.5: spring-boot-starter-test 3.4.4: org.springframework",
              "shortDescription": {
                "text": "Transitive Dependency: spring-core 6.2.5 from spring-boot-starter-test 3.4.4"
              },
              "fullDescription": {
                "text": "spring-core 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "help": {
                "markdown": "\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 6.2.5  | 6.2.8  | 6.2.8 |\n\n\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/components/c29f778e-2db0-4c0c-86be-7db1d26d1312?branchId=69b1795a-7347-404b-a904-f1aa7521c571&component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n## Vulnerabilities(BDSA,CVE)\n\n \n| **Severity**  | **Vulnerability** | **Summary** | **Solution Available?** | **Workaround Available?** |\n| :--- |:--- | :--- | :--- | :--- |\n| :yellow_circle: | [CVE-2025-41234](https://nvd.nist.gov/vuln/detail/CVE-2025-41234) | HTTP Response Splitting | Yes | - |\n| :large_blue_circle: | [CVE-2024-38820](https://nvd.nist.gov/vuln/detail/CVE-2024-38820) | Weak Input Validation | Yes | - |\n| :large_blue_circle: | [CVE-2025-22233](https://nvd.nist.gov/vuln/detail/CVE-2025-22233) | Weak Input Validation | Yes | - |\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat:2025.4-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-test:3.4.4\n        - org.springframework:spring-core:6.2.5\n\n\n## References\n* Common Weakness Enumeration: [CWE-113](https://cwe.mitre.org/data/definitions/113.html)\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n",
                "text": "spring-core 6.2.5 has the following vulnerabilities: [:yellow_circle:] CVE-2025-41234, [:large_blue_circle:] CVE-2024-38820, [:large_blue_circle:] CVE-2025-22233"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "open_source_analysis",
                  "transitive_dependency",
                  "patch_available",
                  "external/cwe/cwe-113",
                  "external/cwe/cwe-20"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "no_effect|javascript",
              "shortDescription": {
                "text": "Unreachable, Unused or Dead Code"
              },
              "fullDescription": {
                "text": "An expression is useless because it has no side effects and its result is ignored."
              },
              "help": {
                "markdown": "\n## Description\nAn expression is useless because it has no side effects and its result is ignored.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nPerhaps the code was intended to affect the behavior of the program, but it does not.\n\n\n## Remediation\nUnreachable and dead code should be analyzed and either removed or corrected depending on whether it is needed. If the code should execute but doesn't, any bugs preventing the code from executing must be fixed. If the code is not needed, and its removal will not have a negative impact on the application, it should be removed.\n\n## References\n* Common Weakness Enumeration: [CWE-398](https://cwe.mitre.org/data/definitions/398.html)\n\n",
                "text": "An expression is useless because it has no side effects and its result is ignored."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-398"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.hardcoded_secret:pattern_low|text",
              "shortDescription": {
                "text": "Use of Hard-coded Credentials"
              },
              "fullDescription": {
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "help": {
                "markdown": "\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n",
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-798"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.missing_tls:common_properties|text",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "fullDescription": {
                "text": "The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
              },
              "help": {
                "markdown": "\n## Description\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Encrypt the data with a reliable encryption scheme before transmitting.\n  2. When using web applications with SSL, use SSL for the entire session from login to logout, not just for the initial login page.\n  3. Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.\n  4. Configure servers to use encrypted channels for communication, which may include SSL or other secure protocols.\n\n## References\n* Common Weakness Enumeration: [CWE-319](https://cwe.mitre.org/data/definitions/319.html)\n\n",
                "text": "The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-319"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_break:logic_error|javascript",
              "shortDescription": {
                "text": "Omitted Break Statement in Switch"
              },
              "fullDescription": {
                "text": "Missing break statement between cases in switch statement"
              },
              "help": {
                "markdown": "\n## Description\nMissing break statement between cases in switch statement\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nExecution falls through to the next case statement or default; this might indicate a common typo.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Omitting a break statement so that one may fall through is often indistinguishable from an error, and therefore should be avoided. If you need to use fall-through capabilities, make sure that you have clearly documented this within the switch statement, and ensure that you have examined all the logical possibilities.\n  2. The functionality of omitting a break statement could be clarified with an if statement. This method is much safer.\n\n## References\n* Common Weakness Enumeration: [CWE-484](https://cwe.mitre.org/data/definitions/484.html)\n\n",
                "text": "Missing break statement between cases in switch statement"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-484"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.jwt_untrusted_decode:io_jsonwebtoken|java",
              "shortDescription": {
                "text": "Insufficient Verification of Data Authenticity"
              },
              "fullDescription": {
                "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
              },
              "help": {
                "markdown": "\n## Description\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n",
                "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-345"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
              "shortDescription": {
                "text": "Insufficient Session Expiration"
              },
              "fullDescription": {
                "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
              },
              "help": {
                "markdown": "\n## Description\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n",
                "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-613"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.insufficient_asymmetric_key_size:core_java|java",
              "shortDescription": {
                "text": "Inadequate Encryption Strength"
              },
              "fullDescription": {
                "text": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
              },
              "help": {
                "markdown": "\n## Description\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInadequate%20Encryption%20Strength%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Use an encryption scheme that is currently considered to be strong by experts in the field.\n\n## References\n* Common Weakness Enumeration: [CWE-326](https://cwe.mitre.org/data/definitions/326.html)\n\n",
                "text": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-326"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.jwt_ignored_expiration_time:jose4j|java",
              "shortDescription": {
                "text": "Insufficient Session Expiration"
              },
              "fullDescription": {
                "text": "The instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."
              },
              "help": {
                "markdown": "\n## Description\nThe instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n",
                "text": "The instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-613"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "sigma.verbose_error_message:spring_boot_stacktrace_properties|text",
              "shortDescription": {
                "text": "Generation of Error Message Containing Sensitive Information"
              },
              "fullDescription": {
                "text": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
              },
              "help": {
                "markdown": "\n## Description\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.\n\nIf errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.\n\nAvoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.\n\n  2. Handle exceptions internally and do not display errors containing potentially sensitive information to a user.\n  3. Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.\n  4. Debugging information should not make its way into a production release.\n  5. Debugging information should not make its way into a production release.\n  6. Where available, configure the environment to use less verbose error messages. For example, in PHP, disable the display_errors setting during configuration, or at runtime using the error_reporting() function.\n  7. Create default error pages or messages that do not leak any information.\n\n## References\n* Common Weakness Enumeration: [CWE-209](https://cwe.mitre.org/data/definitions/209.html)\n\n",
                "text": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-209"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "null_pointer_dereference_exception:return_value|javascript",
              "shortDescription": {
                "text": "NULL Pointer Dereference"
              },
              "fullDescription": {
                "text": "Using the return value of a function that can return null or undefined without checking it for null or undefined."
              },
              "help": {
                "markdown": "\n## Description\nUsing the return value of a function that can return null or undefined without checking it for null or undefined.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nIf the function returns a null or undefined value, this code will cause an exception such as a TypeError.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. If all pointers that could have been modified are sanity-checked previous to use, nearly all NULL pointer dereferences can be prevented.\n  2. The choice could be made to use a language that is not susceptible to these issues.\n  3. Check the results of all functions that return a value and verify that the value is non-null before acting upon it.\n  4. Identify all variables and data stores that receive information from external sources, and apply input validation to make sure that they are only initialized to expected values.\n  5. Explicitly initialize all your variables and other data stores, either during declaration or just before the first usage.\n  6. Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible.\n\n## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n\n",
                "text": "Using the return value of a function that can return null or undefined without checking it for null or undefined."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-476"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.sqli:core_java|java",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "fullDescription": {
                "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
              },
              "help": {
                "markdown": "\n## Description\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nRewrite all SQL queries constructed through dynamic concatenation to use an injection-safe query mechanism such as prepared statements with parameterized queries.\n\nMost modern programming languages provide a feature called \"parameterized queries\" that allow user-supplied data to be inserted safely as values in dynamic SQL queries. Rather than construct the dynamic SQL query by concatenating user-supplied data to static SQL query string fragments, data values are identified in the query by parameter markers or variables. Dynamic data is then passed through a mechanism provided by SQL that prevents the supplied data from changing the meaning of the query.\n\nNote: the exact syntax and use of prepared statements with parameterized queries vary from language to language.\n\n## References\n* Common Weakness Enumeration: [CWE-89](https://cwe.mitre.org/data/definitions/89.html)\n\n",
                "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-89"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "sigma.hardcoded_secret:pattern_low|java",
              "shortDescription": {
                "text": "Use of Hard-coded Credentials"
              },
              "fullDescription": {
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "help": {
                "markdown": "\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n",
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-798"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.hardcoded_secret:pattern_medium|java",
              "shortDescription": {
                "text": "Use of Hard-coded Credentials"
              },
              "fullDescription": {
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "help": {
                "markdown": "\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n",
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-798"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.container_running_as_root:dockerfile|text",
              "shortDescription": {
                "text": "Improper Privilege Management"
              },
              "fullDescription": {
                "text": "The Docker container is configured to run as the root user."
              },
              "help": {
                "markdown": "\n## Description\nThe Docker container is configured to run as the root user.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.\n  2. Follow the principle of least privilege when assigning access rights to entities in a software system.\n  3. Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource.\n\n## References\n* Common Weakness Enumeration: [CWE-269](https://cwe.mitre.org/data/definitions/269.html)\n\n",
                "text": "The Docker container is configured to run as the root user."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-269"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.hardcoded_secret:file|text",
              "shortDescription": {
                "text": "Use of Hard-coded Credentials"
              },
              "fullDescription": {
                "text": "A secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources."
              },
              "help": {
                "markdown": "\n## Description\nA secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n",
                "text": "A secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-798"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.url_manipulation:core_java|java",
              "shortDescription": {
                "text": "Improper Control of Resource Identifiers ('Resource Injection')"
              },
              "fullDescription": {
                "text": "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
              },
              "help": {
                "markdown": "\n## Description\nA user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DImproper%20Control%20of%20Resource%20Identifiers%20%28%27Resource%20Injection%27%29%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, it can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n## References\n* Common Weakness Enumeration: [CWE-99](https://cwe.mitre.org/data/definitions/99.html)\n\n",
                "text": "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-99"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.weak_password_hash:spring_security_code|java",
              "shortDescription": {
                "text": "Weak Encoding for Password"
              },
              "fullDescription": {
                "text": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
              },
              "help": {
                "markdown": "\n## Description\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Passwords should be encrypted with keys that are at least 128 bits in length for adequate security.\n\n## References\n* Common Weakness Enumeration: [CWE-261](https://cwe.mitre.org/data/definitions/261.html)\n\n",
                "text": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-261"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.hardcoded_secret:pattern_low|javascript",
              "shortDescription": {
                "text": "Use of Hard-coded Credentials"
              },
              "fullDescription": {
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "help": {
                "markdown": "\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n",
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-798"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.excessive_session_lifetime:spring_boot_properties|text",
              "shortDescription": {
                "text": "Insufficient Session Expiration"
              },
              "fullDescription": {
                "text": "The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
              },
              "help": {
                "markdown": "\n## Description\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n",
                "text": "The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-613"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.unrestricted_postmessage_target:javascript_window|javascript",
              "shortDescription": {
                "text": "Exposure of Resource to Wrong Sphere"
              },
              "fullDescription": {
                "text": "The application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."
              },
              "help": {
                "markdown": "\n## Description\nThe application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DExposure%20of%20Resource%20to%20Wrong%20Sphere%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-668](https://cwe.mitre.org/data/definitions/668.html)\n\n",
                "text": "The application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-668"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "deadcode:logical_contradiction|javascript",
              "shortDescription": {
                "text": "Unreachable, Unused or Dead Code"
              },
              "fullDescription": {
                "text": "Code can never be reached because of a logical contradiction"
              },
              "help": {
                "markdown": "\n## Description\nCode can never be reached because of a logical contradiction\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe indicated dead code may have performed some action; that action will never occur.\n\n\n## Remediation\nUnreachable and dead code should be analyzed and either removed or corrected depending on whether it is needed. If the code should execute but doesn't, any bugs preventing the code from executing must be fixed. If the code is not needed, and its removal will not have a negative impact on the application, it should be removed.\n\n## References\n* Common Weakness Enumeration: [CWE-561](https://cwe.mitre.org/data/definitions/561.html)\n\n",
                "text": "Code can never be reached because of a logical contradiction"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-561"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.unsafe_eval:core_javascript|javascript",
              "shortDescription": {
                "text": "Use of Potentially Dangerous Function"
              },
              "fullDescription": {
                "text": "The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
              },
              "help": {
                "markdown": "\n## Description\nThe application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Potentially%20Dangerous%20Function%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Identify a list of prohibited API functions and prohibit developers from using these functions, providing safer alternatives. In some cases, automatic code analysis tools or the compiler can be instructed to spot use of prohibited functions, such as the \"banned.h\" include file from Microsoft's SDL. [REF-554] [REF-7]\n\n## References\n* Common Weakness Enumeration: [CWE-676](https://cwe.mitre.org/data/definitions/676.html)\n\n",
                "text": "The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-676"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.hardcoded_secret:pattern_low|html",
              "shortDescription": {
                "text": "Use of Hard-coded Credentials"
              },
              "fullDescription": {
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "help": {
                "markdown": "\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n",
                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-798"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.xml_external_entity_enabled:input_factory|java",
              "shortDescription": {
                "text": "XML External Entity (XXE) Injection"
              },
              "fullDescription": {
                "text": "The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."
              },
              "help": {
                "markdown": "\n## Description\nThe application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DXML%20External%20Entity%20%28XXE%29%20Injection%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nDisable the use of DTDs in XML parsers where the document source crosses a trust boundary. Very few applications have a business requirement to accept DTDs in XML documents supplied by end-users or external systems.\n\nIf DTD support can't be disabled completely due to business requirements, configure your XML parser to disable resolution of external entities. In addition, set an XML entity expansion limit to prevent a denial of service attack from exponential entity expansions.\n\n## References\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n\n",
                "text": "The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-611"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sigma.jwt_ignored_start_time:jose4j|java",
              "shortDescription": {
                "text": "Insufficient Session Expiration"
              },
              "fullDescription": {
                "text": "The instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."
              },
              "help": {
                "markdown": "\n## Description\nThe instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n",
                "text": "The instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-613"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "xss:dom_xss|javascript",
              "shortDescription": {
                "text": "DOM-Based Cross-Site Scripting"
              },
              "fullDescription": {
                "text": "Untrusted user-supplied data is inserted into a context that can execute JavaScript."
              },
              "help": {
                "markdown": "\n## Description\nUntrusted user-supplied data is inserted into a context that can execute JavaScript.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events.\n\n\n## Remediation\nUse the correct remediation approach depending on the data context. Like traditional XSS mitigations, DOM-based XSS is mitigated using output encoding and input validation. The output encoding technique should match the context where data is inserted, such as HTML, HTML attribute, URL parameter, etc. Keep in mind that some contexts, such as the \"href\" attribute value, cannot be mitigated with output encoding alone and, therefore, require input validation. As the injection of untrusted data happens in the browser, the mitigation must be done in the client-side code.\n\nDifferent mitigation techniques apply to different JavaScript execution contexts:\n\n* HTML context. Use the correct element property, such as \"textContent\", \"innerText\" or \"outerText\", so that the inserted data is automatically output-encoded by the browser. \n* HTML attributes. When the \"setAttribute()\" function is used with untrusted data in both the name of the attribute and its value, use exact match to limit the attribute names that a user can set. These should only be safe attributes that do not execute JavaScript, such as \"align\", \"alink\", \"alt\", \"value\" and not event handlers or URI-type attributes. When untrusted data is used to set the value of the attribute, make sure that the attribute is not an event handler or a source. In addition, use input validation for the attribute's values, where appropriate (for example, for numeric values, such as \"width\", \"height\").\n* URL context. Use the exact match approach or mapping. If the application must allow users to provide any URL, at the minimum, validate the schema of the URL to avoid XSS through redirects to \"javascript:\" and \"data:\" URLs. \n* JavaScript context. Redesign the application so untrusted data is not used to dynamically create or modify JavaScript code. If a redesign is not possible, use exact match or allow-lists to validate data instead, since JavaScript encoding will not mitigate an injection into a string that is dynamically evaluated by functions like \"eval()\", \"new Function()\", \"document.write()\", or an event handler. \n\nRemember that server-side validation will not protect the application from DOM-based XSS because in DOM-based injections the payload is evaluated on the client side and not on the server side.\n\nFor example, if untrusted data passed through the URL fragment must be added to the page, use the \"innerText\" property rather than \"innerHTML\". In this case, if the data contains any HTML tags, they will be automatically encoded by the browser.\n\n```\n<p><b id='err'></b></p>\n<input type=hidden id=_csrf value=\"wS2sCg7DA0\" />\n<script>document.getElementById('err').innerText = window.location.hash.substring(1);</script>\n```\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n",
                "text": "Untrusted user-supplied data is inserted into a context that can execute JavaScript."
              },
              "properties": {
                "security-severity": "8.9",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-79"
                ]
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "sigma.jwt_no_claims_validation:jose4j|java",
              "shortDescription": {
                "text": "Insufficient Verification of Data Authenticity"
              },
              "fullDescription": {
                "text": "The application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."
              },
              "help": {
                "markdown": "\n## Description\nThe application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n",
                "text": "The application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-345"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sigma.weak_hash:core_java|java",
              "shortDescription": {
                "text": "Insecure Encryption Algorithm in Use"
              },
              "fullDescription": {
                "text": "This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."
              },
              "help": {
                "markdown": "\n## Description\nThis application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsecure%20Encryption%20Algorithm%20in%20Use%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUse a secure encryption algorithm with a key size and block length of 128 bits or greater. The Advanced Encryption Standard (AES) algorithms (AES-128, AES-192, and AES-256) are approved by NIST and is a good option.\n\n## References\n* Common Weakness Enumeration: [CWE-327](https://cwe.mitre.org/data/definitions/327.html)\n\n",
                "text": "This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."
              },
              "properties": {
                "security-severity": "3.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-327"
                ]
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "copy_paste_error|javascript",
              "shortDescription": {
                "text": "Copy-Paste Error"
              },
              "fullDescription": {
                "text": "A copied piece of code is inconsistent with the original"
              },
              "help": {
                "markdown": "\n## Description\nA copied piece of code is inconsistent with the original\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DCopy-Paste%20Error%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe copied code will not have its intended effect.\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-398](https://cwe.mitre.org/data/definitions/398.html)\n\n",
                "text": "A copied piece of code is inconsistent with the original"
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-398"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "null_pointer_dereference_exception:constant|javascript",
              "shortDescription": {
                "text": "Bad Use Of Null-like Value"
              },
              "fullDescription": {
                "text": "Performing an operation that would be invalid on a null or undefined value."
              },
              "help": {
                "markdown": "\n## Description\nPerforming an operation that would be invalid on a null or undefined value.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nIf the value is null or undefined, this code will cause an exception such as a TypeError.\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n\n",
                "text": "Performing an operation that would be invalid on a null or undefined value."
              },
              "properties": {
                "security-severity": "6.8",
                "tags": [
                  "security",
                  "static_analysis",
                  "external/cwe/cwe-476"
                ]
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            }
          ]
        }
      },
      "results": [
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-aop 6.2.5: spring-boot-starter-security 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "d44db6af450398712d313e2ae94b43a7b0de16d8efdf4935c12e27e619d7245e"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-security-core 6.4.4: spring-boot-starter-oauth2-client 3.4.4: org.springframework.security",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "f236c1885688a5abef0ebf78eeaa5890899fee8176e9c8369545fa70b25907c7"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-jdbc 6.2.5: spring-boot-starter-data-jpa 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "6ea7fb1a3e36a0c12c7d5a85ee124570fd687744702a125f9435d36444593688"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-beans 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "07d66ed3adccb001d53c81331f5a1c6d83b705c248c7646e7655b52f2d792b1e"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "tomcat-embed-el 10.1.39: spring-boot-starter-validation 3.4.4: org.apache.tomcat.embed",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "cd337fb3aa606e4f67c7eba10280b8ccdc0e13868d7118c880bc8dc7d8731899"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "dirgra 0.5: asciidoctorj 3.0.0: org.jruby",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "78dfe1bb4e7b0fea930f5ada1a09a4879955c4c77556eaac5e2a1a1df651bea3"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-test 6.2.5: spring-boot-starter-test 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e24549b60a5d76f647784a57a80c652b72cd6f8a468a05ed0b87457a8496d4aa"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-data-jpa 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "8f7ce5f4061968f5556ee5efecea874a9f7fd9039f2c6a4263b53c75da30610f"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-aspects 6.2.5: spring-boot-starter-data-jpa 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "d9a9b7ef001c2ade2449fb90fae336e35acf06db03c9956a55dd2735bd40be39"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-web 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "4b3e897cf10d8669c6f0be727a487f97a864dacda32c95d46e06a4d900214996"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-jdbc 3.4.4: spring-boot-starter-data-jpa 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "b3dddc3e78b074d3a8cf066d8cbe08a36847c4cc673648ddc57c5c8a1da9857d"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "xstream 1.4.5: com.thoughtworks.xstream",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "ecfec36654dfd6bd931ac4ce2ba7cd4dcd67a5c11855b9171916dedf68d57977"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-logging 3.4.4: spring-boot-starter-validation 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "12a17ffbd5bb02e38fd6ba987f3f548a20b11d3d75a3ac4785d4d781a6cc3034"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-json 3.4.4: spring-boot-starter-web 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "4913c0030704d71f196c253dd69227ad9657be650cfbaf1c19ff8755243957f3"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-tx 6.2.5: spring-boot-starter-data-jpa 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "daf5cdbe685dcb209c748edb954dff2867781ed1eb11f7ef01406363a93e871f"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-security 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "779acc48a4962e806aaad9be66b02ea57bda12c33fa423ac783f41d20ef07046"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-webmvc 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "3aa3176e7370f9a74c23d55ce63eceaa45353a66d54990774d62e44e7f2dba35"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-security-crypto 6.4.4: spring-boot-starter-oauth2-client 3.4.4: org.springframework.security",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "4685270dcfc89431d5d7d533394f5f7af4351ce5bbe5b1d7a041f225f20a3dcd"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-actuator 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "92b6f5d82668d1136e676affd22b28b647ab0742da77f346f3ecf10ebab55c3e"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-test 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "bcc3061a7f58bbe214b977324a77b80282e10faca4e662b1e552c55f0ae4b820"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-autoconfigure 3.4.4: spring-boot-starter-validation 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "2a03576da699337c0870132adebabfbf73394cdc5e083a35e264907523732600"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-context 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "01953f7afbf5cf59f6f10271979cef7f5d1803d161a015b81c39d760698db132"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-expression 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "435d8333084c41d4b2a388a7dda05ab405ee08fdab2de4892ad7ce0f230c0f21"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot 3.4.4: spring-boot-properties-migrator 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "c3322a425c7c2793c7bf8eae598cb62a4abfbe6121182fbe91f9d5b2ad5aa221"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "tomcat-embed-core 10.1.39: spring-boot-starter-web 3.4.4: org.apache.tomcat.embed",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "a36d7da5184bfb0baf89386ce488ef5c82ee3add5aeb42a450fe33ddced6b9b4"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-validation 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "4ab1e59e3e7158c2d8cda4b2d28b43894663db87538e546a15086cba3fa89063"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "tomcat-embed-websocket 10.1.39: spring-boot-starter-web 3.4.4: org.apache.tomcat.embed",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "7b6254a6a740b3d077a5648138b0c58477e5e589f6cb5efd8d14c6b52d865002"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-security-web 6.4.4: spring-boot-starter-security 3.4.4: org.springframework.security",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e1a8b088aafb21d97d3826ea1aa8e01866a768b04b86a033690dd900d4a0410c"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-orm 6.2.5: spring-boot-starter-data-jpa 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "d425f72ba091fcc5b964362d52e92e2a0b31e1ed8b60e94dd1fc822214a74de6"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-tomcat 3.4.4: spring-boot-starter-web 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "7c9bc9b12dc04d4a077b0423e7df971115919bbaa1371c858121a34711f32e08"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter-thymeleaf 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "fb7f373a4f8cd56bd713d3243eb49e52743abe1d8148578a8a46eec06dea5820"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-boot-starter 3.4.4: spring-boot-starter-validation 3.4.4: org.springframework.boot",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "a542dbd5334e55d5bab53d512fe6e81db52c482a9000f8031df68ec4c1717423"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-security-config 6.4.4: spring-boot-starter-security 3.4.4: org.springframework.security",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "0ef94f53a2b8363decf6401ddcca4cd683d58e82581f7faf23a94dd2a32c9992"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-security-test 6.4.4: org.springframework.security",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "355e82d47bb94747f371a326d26cd8d8f866711efbd7fd2473c70613fc0e59d9"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-web 6.2.5: spring-boot-starter-web 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "89a113755774a0509365dc59b4611b4afd0dede1319942cd10139f86accb6c20"
          }
        },
        {
          "message": {
            "text": "This dependency has vulnerabilities. For detailed information regarding the vulnerabilities, take a look at the BDSAs and/or CVEs below."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://unknown-file"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "spring-core 6.2.5: spring-boot-starter-test 3.4.4: org.springframework",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "db597bd0fd4f96e0a8d6961758734fb989a114ede011727ab490eab65d1d94d2"
          }
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/6C40615D00770C6FB6386B58FC2AE43E?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 11090
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e8bfc1b6e973a073357d54d96e88bb582610cde48a6dcca86de65222f81e692a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 11090
                          }
                        },
                        "message": {
                          "text": "Reading variable \"split\" and discarding the result. What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 11090
                          }
                        },
                        "message": {
                          "text": "Perhaps this code is incomplete or mistyped in some way."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/7199F4751EA99F045564CE0EE87DA79A?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dpim-main-sarif.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "pim-main-sarif.json"
                },
                "region": {
                  "startLine": 5
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "61e0dc2e4c24dfb6383b58d27a7cd69d0951993272fbdab3780f7fe9eb13bbbe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "pim-main-sarif.json"
                          },
                          "region": {
                            "startLine": 5
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Access token (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "pim-main-sarif.json"
                          },
                          "region": {
                            "startLine": 5
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/BA39CCDA00B525C5CE5CA93500D47796?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webgoat.properties)\n\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/application-webgoat.properties"
                },
                "region": {
                  "startLine": 41
                }
              }
            }
          ],
          "ruleId": "sigma.missing_tls:common_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "a1b01d33e24950126be9f414b7d98fc4e313922703a32b905a599cc43a588eb8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "Configure the URI to use a secure protocol with TLS protections."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/B5EFEB94C10E39E5B6378880985126F2?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nMissing break statement between cases in switch statement"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 6785
                }
              }
            }
          ],
          "ruleId": "missing_break:logic_error|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "cbc4e3b5e1a7471130394911db8e0945cb027b25c622ac2cafa3cc348a63223f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 6785
                          }
                        },
                        "message": {
                          "text": "The case for \"this.$behaviours\" is not terminated by a \"break\" statement."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 6787
                          }
                        },
                        "message": {
                          "text": "The above case falls through to this one."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/EF7610820A3C30C93EC8D59458F18C9F?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FTokenTest.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                },
                "region": {
                  "startLine": 39
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_untrusted_decode:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "2e3b5981bfad695a11088eed619a1c2425d2e40692eda969b4da47d3a3426565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/9D09FFF7B5DF5A187891766223207133?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                },
                "region": {
                  "startLine": 82
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "2affd5905e06c189d60006111327693ff74ebd9c4e5306cc0a2f9ae9d09b9589"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 82
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 82
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/A9CE3B9F23A57DE0C324405322999C48?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInadequate%20Encryption%20Strength%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fcryptography%2FCryptoUtil.java)\n\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                },
                "region": {
                  "startLine": 42
                }
              }
            }
          ],
          "ruleId": "sigma.insufficient_asymmetric_key_size:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "7cf2d9d7bf25a885e851ff3db7c103d5332345f71ad6e20c4ce57ddb56ea6056"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "Modify the application to adhere to the following minimum key size requirements:\n* 3072 bit key and 283 bit modulus for Diffie-Hellman and DSA algorithms.\n* 3072 bit key for RSA algorithms.\n* 256 bit domain parameters for elliptic curve algorithms."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/7CBD34ACDE7FD32CCDE967E42D2BEE72?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 15272
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "23dd29941e13028b516ea72b113d95797e617945035d8f9e4edc927e9e160865"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 15272
                          }
                        },
                        "message": {
                          "text": "Discarding the result of operator \"==\" in \"point.bias == -1\". What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 15272
                          }
                        },
                        "message": {
                          "text": "Did you intend to make an assertion or assignment?"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/0C744D4D6786EAA81A8366AA3FB90AE8?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTToken.java)\n\nThe instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                },
                "region": {
                  "startLine": 128
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_ignored_expiration_time:jose4j|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "3eac54d11ca11b6662f95d322b085df0e5e4d237cfa4054044f8ac9e1fa61e39"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                          },
                          "region": {
                            "startLine": 128
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                          },
                          "region": {
                            "startLine": 128
                          }
                        },
                        "message": {
                          "text": "Verify that the token is still valid by invoking the `setRequireExpirationTime()` function.\nInvoke the `setMaxFutureValidityInMinutes()` function if you need to tolerate a small amount of clock skew."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/D1AE9A7E0681113FE9B24FAD88D3C114?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webwolf.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/application-webwolf.properties"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "sigma.verbose_error_message:spring_boot_stacktrace_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "9254f628b0c2d396d8183ab2b0d2bcde98e592e23961a6b6bd87c67ab02c41a4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webwolf.properties"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webwolf.properties"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/CA40F03D38C1A04061F3EFCA5C465379?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 13435
                }
              }
            }
          ],
          "ruleId": "null_pointer_dereference_exception:return_value|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "537985ed9b802012d26310662e811879f98792fa5031aad0375106289b094480"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7473
                          }
                        },
                        "message": {
                          "text": "Example 2 (cont.): \"token\" has its value checked in \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7481
                          }
                        },
                        "message": {
                          "text": "Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9474
                          }
                        },
                        "message": {
                          "text": "Example 3 (cont.): \"token\" has its value checked in \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9475
                          }
                        },
                        "message": {
                          "text": "Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9833
                          }
                        },
                        "message": {
                          "text": "Example 1 (cont.): \"token\" has its value checked in \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9834
                          }
                        },
                        "message": {
                          "text": "Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13393
                          }
                        },
                        "message": {
                          "text": "Condition \"!session\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13393
                          }
                        },
                        "message": {
                          "text": "Condition \"!session.bgTokenizer\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13399
                          }
                        },
                        "message": {
                          "text": "Condition \"!token\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13399
                          }
                        },
                        "message": {
                          "text": "Condition \"!/\\b(?:tag-open|tag-name)/.test(token.type)\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13405
                          }
                        },
                        "message": {
                          "text": "Condition \"token.type.indexOf(\"tag-open\") != -1\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13407
                          }
                        },
                        "message": {
                          "text": "Condition \"!token\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13413
                          }
                        },
                        "message": {
                          "text": "Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13415
                          }
                        },
                        "message": {
                          "text": "Condition \"prevToken.value == \"<\"\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13430
                          }
                        },
                        "message": {
                          "text": "Condition \"prevToken\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13430
                          }
                        },
                        "message": {
                          "text": "Condition \"depth <= 0\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13431
                          }
                        },
                        "message": {
                          "text": "Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13432
                          }
                        },
                        "message": {
                          "text": "\"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13432
                          }
                        },
                        "message": {
                          "text": "Assigning \"prevToken\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13434
                          }
                        },
                        "message": {
                          "text": "Condition \"token\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13434
                          }
                        },
                        "message": {
                          "text": "Example 5 (cont.): \"token\" has its value checked in \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13434
                          }
                        },
                        "message": {
                          "text": "Condition \"token\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13434
                          }
                        },
                        "message": {
                          "text": "Condition \"token.value === tag\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13434
                          }
                        },
                        "message": {
                          "text": "Condition \"token.type.indexOf(\"tag-name\") !== -1\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13435
                          }
                        },
                        "message": {
                          "text": "Accessing a property of null-like value \"prevToken\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 14569
                          }
                        },
                        "message": {
                          "text": "Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 14571
                          }
                        },
                        "message": {
                          "text": "Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/CF5737B5EC48196985EE73AA2D24422E?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "dba35381d1b542d07f6f10731ac506ec12ae234bfbd3ead108c9a5720e4eada4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/49BB1BD9EDB754631E275DEE203A6E0A?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fit%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fintegration%2FJWTLessonIntegrationTest.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/integration/JWTLessonIntegrationTest.java"
                },
                "region": {
                  "startLine": 77
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_untrusted_decode:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "b99a537daf090ed4a25cd7b3a82746698ee463d34b38a8be151b1a0a54a5d284"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/integration/JWTLessonIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/integration/JWTLessonIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/DB2C945999756017FDA78E29AEE337DC?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson9.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "632918ba66b366f9e1df084a42de41812f4ee36beb2ee9348940adff999b4e53"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::completed sinks auth_tan"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "'auth_tan' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::injectableQueryIntegrity sinks auth_tan"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "assigning to queryInjection"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/8264C718384EC85BEAE2E2866DEFA340?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                },
                "region": {
                  "startLine": 63
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "3bed3a51a4a0f9aad6397d882f662d578de503574d16d3845705f171ca559fe2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/08A6793677642A4BD0A5296DE501A710?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                },
                "region": {
                  "startLine": 88
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "58fbb9cbc65e4f8e49d14d5fd4a47fc56a83f0657f90e55b41bd9f8404526746"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 88
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 88
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/75459D1E1B0DEBB8E02005A4B20D8843?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fit%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fplaywright%2Fwebwolf%2FJwtUITest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/playwright/webwolf/JwtUITest.java"
                },
                "region": {
                  "startLine": 19
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "18875c7b1ccd23fb9fdf9805e9868667b4a987e6a930795187a461b9a4fc6ea4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/playwright/webwolf/JwtUITest.java"
                          },
                          "region": {
                            "startLine": 19
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/playwright/webwolf/JwtUITest.java"
                          },
                          "region": {
                            "startLine": 19
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C0D60C7FA5827D37DF55F7BDE5E9BD1E?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fuser%2FUserServiceTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                },
                "region": {
                  "startLine": 31
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "fb825c9f3dd79db264292a8c7e134697c5d1052a5094b4a3c8bb4fb454783ce4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                          },
                          "region": {
                            "startLine": 31
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                          },
                          "region": {
                            "startLine": 31
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/8566312EFA678B10EE4606B70B875C11?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTTokenTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                },
                "region": {
                  "startLine": 59
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_medium|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "2e50dc254eec484ff98b185edcaba3da28f83e5c2fe09f8ac331f1353600ea3c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: JWT token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/872A8586FA32BEF81D6388E579CED7C9?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                },
                "region": {
                  "startLine": 75
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "985a57411973cff6e6e6c7a0af614b912ed842ad61c3a10b8f69fc95f7319e05"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 75
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 75
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/7A1C00300F0A757BAEEA157AFD60C792?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 325
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "8ace912eef7c5c7a0977bcf335d4506aba3c08d38a3eafebc1caa5072a36938c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 325
                          }
                        },
                        "message": {
                          "text": "Discarding the result of operator \"==\" in \"lengthBefore + 1 == array.length\". What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 325
                          }
                        },
                        "message": {
                          "text": "Did you intend to make an assertion or assignment?"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/4AF325679E2E880838A8FECAC542B897?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3DDockerfile_desktop)\n\nThe Docker container is configured to run as the root user."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile_desktop"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "sigma.container_running_as_root:dockerfile|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "796ccd007d8f46385a7eb0df996747acaf81d726ccb1436e48b425e93e15bb50"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "Dockerfile_desktop"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "The Docker container is configured to run as the root user."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "Dockerfile_desktop"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Explicitly set the last `USER` value to a non-root user to prevent the container from running in a privileged context."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/A1C10AECA6787A0B32F624AB66E33F82?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fgoatkeystore.pkcs12)\n\nA secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/goatkeystore.pkcs12"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:file|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "b07c26e684c61dfb835e279d40f2275a88600ddda0fdc44f5fdcf31acc94ba19"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/goatkeystore.pkcs12"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/goatkeystore.pkcs12"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Avoid committing to the code repository any files that contain secrets or sensitive data. These files should be managed outside the code repository, preferably using a secure vault or similar, and loaded onto the system as needed."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/E06BC762934956ABCC7C927CD01FA6CE?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DImproper%20Control%20of%20Resource%20Identifiers%20%28%27Resource%20Injection%27%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fpathtraversal%2FProfileUploadRetrieval.java)\n\nA user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 114
                }
              }
            }
          ],
          "ruleId": "sigma.url_manipulation:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "c1e6741035c5d02ac78f0bc8f00b62aa77ab9b642be74ffc6c83fc0fd9e19ab0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 99
                          }
                        },
                        "message": {
                          "text": "request.getParameter(\"id\") is a source of tainted data"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 99
                          }
                        },
                        "message": {
                          "text": "assigning to id"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 100
                          }
                        },
                        "message": {
                          "text": "assigning to catPicture"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 101
                          }
                        },
                        "message": {
                          "text": "calling java.io.File::File"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 114
                          }
                        },
                        "message": {
                          "text": "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 114
                          }
                        },
                        "message": {
                          "text": "URL manipulation vulnerabilities can be addressed by proper input validation. Allow listing the allowed scheme and authority, and deny listing characters that allow unsafe path traversal in the path and query parts of the URL can improve security."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 115
                          }
                        },
                        "message": {
                          "text": "calling java.io.File::getName"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 115
                          }
                        },
                        "message": {
                          "text": "calling java.net.URI::URI"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C42AD9530BA0EA5B9DBA0D074E0C24C9?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FTokenTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                },
                "region": {
                  "startLine": 30
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "f7c5f41917ef7330961786a2b0c17ff795f8090362ece92efe2250b94eaeab81"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                          },
                          "region": {
                            "startLine": 30
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                          },
                          "region": {
                            "startLine": 30
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C37FE86941CB0DEA86428996BF26C253?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcontainer%2Fusers%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                },
                "region": {
                  "startLine": 55
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "46180f483a27e06d1c224cccedf363bf784203f1eea0e7b876a2b7e4d943a190"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/ABA947A9A8357DE6B83EE3F8BD8E4163?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 164
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_untrusted_decode:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "48022c78290a42dccd56737d8546312aabec77faf69d192b8921ed6131d99b36"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 164
                          }
                        },
                        "message": {
                          "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 164
                          }
                        },
                        "message": {
                          "text": "Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/3ED27D5A62DB4ADDAC46F4CBD5C8AF92?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "5ba1620a65ca4016236c222a9c9266f9e61a19e328061dc81815d9416b66f30d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 37
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::completed sinks account"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 40
                          }
                        },
                        "message": {
                          "text": "'account' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::injectableQuery"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/2B0A8EFD289718E3DA786807C6BB1CA7?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webwolf.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/application-webwolf.properties"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "sigma.verbose_error_message:spring_boot_stacktrace_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "342f20fa3cfefc2f0f4212db50575283f290006e164ad00d906a3ce54b05ea9e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webwolf.properties"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webwolf.properties"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/EC1A63D9F8F87A4947D3BABA49FF9798?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2FWebSecurityConfig.java)\n\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                },
                "region": {
                  "startLine": 86
                }
              }
            }
          ],
          "ruleId": "sigma.weak_password_hash:spring_security_code|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "a90362d23f4da38ab84fed28cfd7f6b59f1bb6d82cb07fbfd40f4be03dea5eac"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 86
                          }
                        },
                        "message": {
                          "text": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 86
                          }
                        },
                        "message": {
                          "text": "Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/04ADCF0A785A4FDF6BEA93929A522D87?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nMissing break statement between cases in switch statement"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 13122
                }
              }
            }
          ],
          "ruleId": "missing_break:logic_error|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "b6ca5aff29cf849c27ac1cb3a2a5d3a86b236ff11326cd8e990da0c288758cb7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13122
                          }
                        },
                        "message": {
                          "text": "The case for value \"\"center-animate\"\" is not terminated by a \"break\" statement."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13124
                          }
                        },
                        "message": {
                          "text": "The above case falls through to this one."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/88889EEB8263F14E22E9B33D226F786C?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Flessons%2Fjwt%2Fjs%2Fjwt-refresh.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/lessons/jwt/js/jwt-refresh.js"
                },
                "region": {
                  "startLine": 10
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e23862d32ba2185f82a2f82e7862cdb68bd978123bd13dc707f6739b260e0a26"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/lessons/jwt/js/jwt-refresh.js"
                          },
                          "region": {
                            "startLine": 10
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/lessons/jwt/js/jwt-refresh.js"
                          },
                          "region": {
                            "startLine": 10
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/E08425F121E195DFC2EB87D537D1920C?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webwolf.properties)\n\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/application-webwolf.properties"
                },
                "region": {
                  "startLine": 14
                }
              }
            }
          ],
          "ruleId": "sigma.excessive_session_lifetime:spring_boot_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "b7f5b42bda34ae75f1962ab9d2b0c0c842e038c75483bf42b8acdb68890f5c2e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webwolf.properties"
                          },
                          "region": {
                            "startLine": 14
                          }
                        },
                        "message": {
                          "text": "The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webwolf.properties"
                          },
                          "region": {
                            "startLine": 14
                          }
                        },
                        "message": {
                          "text": "Set the session expiration time to a value greater than or equal to 0, but less than 30 minutes in order to substantially reduce the window of opportunity for session-based attacks."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/925FF609A5A51FCF8AB92DD61642BE80?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fit%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fplaywright%2Fwebgoat%2FRegistrationUITest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/playwright/webgoat/RegistrationUITest.java"
                },
                "region": {
                  "startLine": 27
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "ea3d75465339aa03bde1dff245af9c4eb69ee964f214ed41ee730a7abe2f05d4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/playwright/webgoat/RegistrationUITest.java"
                          },
                          "region": {
                            "startLine": 27
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/playwright/webgoat/RegistrationUITest.java"
                          },
                          "region": {
                            "startLine": 27
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/BD484CED30104534C4EA488F0AB35F7F?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                },
                "region": {
                  "startLine": 227
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "4fedbe961b05f1133ad511ea1deaf0ef83a40b9b845c0dca18a3d51cb7ed04af"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                          },
                          "region": {
                            "startLine": 227
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                          },
                          "region": {
                            "startLine": 227
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/761765D9BC41FD999927EBCA71834416?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 9117
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "738ec3073a59e54826a5157886b24e4d6d91798567d6dc18b1f662258fcc4904"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9117
                          }
                        },
                        "message": {
                          "text": "Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9117
                          }
                        },
                        "message": {
                          "text": "Perhaps this code is incomplete or mistyped in some way."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/205FF468B9A9C04297143B0D3BCCC58A?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DExposure%20of%20Resource%20to%20Wrong%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nThe application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 1740
                }
              }
            }
          ],
          "ruleId": "sigma.unrestricted_postmessage_target:javascript_window|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "82834e83cfb75490cdfa7516722d007c2c283c307e86c176ec040819456acf82"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 1740
                          }
                        },
                        "message": {
                          "text": "The application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 1740
                          }
                        },
                        "message": {
                          "text": "Give an exact URI value for parameter `targetOrigin`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/F3AFB42DC833BA9958BC8ABD8880A9ED?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fplugins%2Fbootstrap-wysihtml5%2Fjs%2Fwysihtml5-0.3.0.js)\n\nCode can never be reached because of a logical contradiction"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                },
                "region": {
                  "startLine": 355
                }
              }
            }
          ],
          "ruleId": "deadcode:logical_contradiction|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "7283d83862945be940e6fc176156db9979beecc429b6ec61dba53075fa0ac6f7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                          },
                          "region": {
                            "startLine": 355
                          }
                        },
                        "message": {
                          "text": "The condition \"[\"splitText\", \"deleteData\", \"insertData\", \"appendData\", \"cloneNode\"]\" must be true."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                          },
                          "region": {
                            "startLine": 355
                          }
                        },
                        "message": {
                          "text": "Execution cannot reach the expression \"util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])\" inside this statement: \"if (!util.areHostMethods(te...\"."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/2E9C85C74AF0CA660518223B452C9DF5?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fmissingac%2FMissingFunctionAC.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                },
                "region": {
                  "startLine": 14
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "272abec8d03a96b1459c5455bac9e23cf9b2b07a17a47963c916a74622cf0bee"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 14
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 14
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/239E152A476CB2D36646ABB81D7806C9?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Potentially%20Dangerous%20Function%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fwebgoat%2Fstatic%2Fjs%2Fjquery_form%2Fjquery.form.js)\n\nThe application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/webgoat/static/js/jquery_form/jquery.form.js"
                },
                "region": {
                  "startLine": 805
                }
              }
            }
          ],
          "ruleId": "sigma.unsafe_eval:core_javascript|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "f414d05555a88d84fff2edcee1914d8cf45ed0657a8f7d3601dcfd12bb277aeb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/webgoat/static/js/jquery_form/jquery.form.js"
                          },
                          "region": {
                            "startLine": 805
                          }
                        },
                        "message": {
                          "text": "The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/webgoat/static/js/jquery_form/jquery.form.js"
                          },
                          "region": {
                            "startLine": 805
                          }
                        },
                        "message": {
                          "text": "Whenever possible, rewrite the application without using code evaluation functions. If the application absolutely needs to use dynamic code evaluation, send hard-coded strings, or user input after the input validation to these functions. If conditional execution is needed, map user input to hardcoded values and send them to the evaluation functions."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/18E10C480C4EB166928AF8FFCD378437?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson9.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "632918ba66b366f9e1df084a42de41812f4ee36beb2ee9348940adff999b4e53"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::completed sinks name"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "'name' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::injectableQueryIntegrity sinks name"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "assigning to queryInjection"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/59BD6433FC409D616CB84EBC279AE76C?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webwolf.properties)\n\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/application-webwolf.properties"
                },
                "region": {
                  "startLine": 14
                }
              }
            }
          ],
          "ruleId": "sigma.excessive_session_lifetime:spring_boot_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "bfaede96a1b21917dc0589a71786d280a9044674d44a8b3363108e014b14b953"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webwolf.properties"
                          },
                          "region": {
                            "startLine": 14
                          }
                        },
                        "message": {
                          "text": "The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webwolf.properties"
                          },
                          "region": {
                            "startLine": 14
                          }
                        },
                        "message": {
                          "text": "Set the session expiration time to a value greater than or equal to 0, but less than 30 minutes in order to substantially reduce the window of opportunity for session-based attacks."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C6209546CADF1840B569358E87FFEE93?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "5ba1620a65ca4016236c222a9c9266f9e61a19e328061dc81815d9416b66f30d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 37
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::completed sinks injection"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 40
                          }
                        },
                        "message": {
                          "text": "'injection' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::injectableQuery"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/DBDB213346279FEEE157E9142CBAE688?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 8534
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "614249a2cdf663a9ad259f226a139321670348050cd9c9f2067b3b7fd0419ce9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 8534
                          }
                        },
                        "message": {
                          "text": "Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 8534
                          }
                        },
                        "message": {
                          "text": "Perhaps this code is incomplete or mistyped in some way."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/77F0E90D5AE37FCFE02EA0E24C1EB759?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTTokenTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                },
                "region": {
                  "startLine": 34
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_medium|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "020490a9344a2d86e20e8a55f3a3a2b1f96334f361ce512cbd7f6b4c373bcbb1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                          },
                          "region": {
                            "startLine": 34
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: JWT token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                          },
                          "region": {
                            "startLine": 34
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/F5251DBD63D7BB8163360A29B2B9577B?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTTokenTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_medium|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "0f90aebd4f8c22bde17442046be17126af8953ee358928f1a5f6ebfe0e070cb2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: JWT token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/jwt/JWTTokenTest.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/69B7AD597723773A0BD5C77263B20A52?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fchallenges%2Fchallenge7%2FAssignment7.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"
                },
                "region": {
                  "startLine": 89
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "6620e75037dc3510ad3ab1419b5da3af053e013d08299122ef65c315458786ce"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"
                          },
                          "region": {
                            "startLine": 89
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"
                          },
                          "region": {
                            "startLine": 89
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/1B9D551367ED0633125AB5DDD13897A0?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 70
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "45b9b90156b5acb4106277ecb466d0d04fb43eab5d69866f6cdf47d54b9cf97c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 70
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 70
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/D941EEEE3C83AC1D2D46FA3F7951CCEE?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fadvanced%2FSqlInjectionChallenge.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                },
                "region": {
                  "startLine": 57
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "5eaec8a07ec5f8dd92f1b026b33acb59e539d0b08538cfbc41f0b279ba38b606"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionChallenge::registerNewUser sinks username"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "'username' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "assigning to checkUserQuery"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/30CE0E5F670951E779D5BAC4D40BAF54?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcontainer%2Fusers%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                },
                "region": {
                  "startLine": 41
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "dc3640d54c121b92fe838439973e0975dfb0df5a5b9e911a68d7d237361200af"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/603E0BBCBFBA1E8979BEB8C3DF4E3301?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fdeserialization%2FDeserializeTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                },
                "region": {
                  "startLine": 60
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "44308b531fb7882bb48bae2d7a08f451e54eeb8f8c7873be88300b172948aaab"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Token (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/AD9178FB6A734878D70AA7974EC39B20?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Flessons%2Fpathtraversal%2Fhtml%2FPathTraversal.html)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/lessons/pathtraversal/html/PathTraversal.html"
                },
                "region": {
                  "startLine": 257
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|html",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "11154db6e10587e4e529e97bc9fe12d0e80011af423c85963d47a617ffe8da9c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/pathtraversal/html/PathTraversal.html"
                          },
                          "region": {
                            "startLine": 257
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/pathtraversal/html/PathTraversal.html"
                          },
                          "region": {
                            "startLine": 257
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/E453A8B3263435D18286BC17ECEFB162?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "f83ae4f3c3f21d8c1ce6a0e283b47d5ad137db3fc2ba17c40a0bcbec393fcd01"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::completed sinks auth_tan"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "'auth_tan' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::injectableQueryConfidentiality sinks auth_tan"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 49
                          }
                        },
                        "message": {
                          "text": "assigning to query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/642611F38999D63A3D5DA2271E23628B?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fcryptography%2FXOREncodingAssignment.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/XOREncodingAssignment.java"
                },
                "region": {
                  "startLine": 25
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "fd9bfbbdbcf630f2803d1a0f5f41ee48fa97a4ea97c808f7c6d72ba0898cd30b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/XOREncodingAssignment.java"
                          },
                          "region": {
                            "startLine": 25
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/XOREncodingAssignment.java"
                          },
                          "region": {
                            "startLine": 25
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/7C65ADCB91C5FDAEED71D64C1B012890?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 45
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "075c85ca075468020c5485f95b02cfe3357410cb83003df53504bf42bca36cff"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/1517C628ED7B193A043237DAADDC46F1?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 46
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "d0677b0f80ca10911339f3809d8746de895184528ac9bbc2fca9427d707b748d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/17CF00E4CE29293267D5622051A5AE85?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Potentially%20Dangerous%20Function%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Fjquery.form.js)\n\nThe application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/webgoat/static/js/libs/jquery.form.js"
                },
                "region": {
                  "startLine": 805
                }
              }
            }
          ],
          "ruleId": "sigma.unsafe_eval:core_javascript|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "2ff440e40c856a4a3fa2944f18a0ff74009109866b5156f6d325d1b081669115"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/webgoat/static/js/libs/jquery.form.js"
                          },
                          "region": {
                            "startLine": 805
                          }
                        },
                        "message": {
                          "text": "The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/webgoat/static/js/libs/jquery.form.js"
                          },
                          "region": {
                            "startLine": 805
                          }
                        },
                        "message": {
                          "text": "Whenever possible, rewrite the application without using code evaluation functions. If the application absolutely needs to use dynamic code evaluation, send hard-coded strings, or user input after the input validation to these functions. If conditional execution is needed, map user input to hardcoded values and send them to the evaluation functions."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/31AEEEB35B3665893AD4B2407C2C7CD7?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcontainer%2FWebSecurityConfig.java)\n\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                },
                "region": {
                  "startLine": 88
                }
              }
            }
          ],
          "ruleId": "sigma.weak_password_hash:spring_security_code|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "f7e8dc91c77f787d134f72a3cd8fa28f6d24b3482bb45e0a091d7eedb79af13f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 88
                          }
                        },
                        "message": {
                          "text": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 88
                          }
                        },
                        "message": {
                          "text": "Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/E51C5C3768210103D84BEC55BBBFB546?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5b.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                },
                "region": {
                  "startLine": 97
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "5855f904ccc025a7c74f63b7ea14927ef2de18013360861e2ec24edd7ec8224c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 37
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::completed sinks login_count"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "'login_count' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::injectableQuery sinks login_count"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 97
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 97
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/F2C2CFC0A0371099AAF8D14460605603?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2Fclaimmisuse%2FJWTHeaderKIDEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpointTest.java"
                },
                "region": {
                  "startLine": 39
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "4b26943056acc09f0971480f9a598fcbf1d8a697e02b5406504d7b89fdfb7042"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpointTest.java"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpointTest.java"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/E0F187F268FBC90A7F3F95EF83A6FB38?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                },
                "region": {
                  "startLine": 113
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "fa341ce6ad488fdd13067bc47a9319a5eae83d0dfb13539b181fa4268429d048"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 113
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Access token (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 113
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C53C6CB6A7B2224BC22E932540CBA161?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webgoat.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/application-webgoat.properties"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "sigma.verbose_error_message:spring_boot_stacktrace_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "273ecafb2220bb175c5058eb73f1abd5dd56ba62854e9d3d12a8f52e5e16ef18"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/88B095DBCDDF1C2AA401140993ADF7A1?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Flessontemplate%2FSampleAttack.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                },
                "region": {
                  "startLine": 27
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "1e13fc100ec7ce365cffd6d953c34e4aaab9a40eb8fe7f02577cf8f1d88082cd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                          },
                          "region": {
                            "startLine": 27
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                          },
                          "region": {
                            "startLine": 27
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/FF656A1FAC6373A894040D89C0D13D7C?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                },
                "region": {
                  "startLine": 209
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e5dd34c1500d5008695cfdb0709c02e7d42e24d44105f15f8a66586490cf70fa"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                          },
                          "region": {
                            "startLine": 209
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                          },
                          "region": {
                            "startLine": 209
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/ABABA4E2B4F4BF679911C4A8283E5A94?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 4315
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "717ed2a807c4370c84476c079cf047129615b796f559bf42ea72eb7e6e1e86f5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 4315
                          }
                        },
                        "message": {
                          "text": "Discarding the programmer-written value \"\"no use strict\"\". What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 4315
                          }
                        },
                        "message": {
                          "text": "Perhaps this code is incomplete or mistyped in some way."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/0546E01A0E58DA5FBED1F06822018999?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fspoofcookie%2FSpoofCookieAssignmentTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignmentTest.java"
                },
                "region": {
                  "startLine": 53
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "6f7a9358eb0abfa3ba8cc9cead1ceea143aec7c7357479359b7785ecfea6b03e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignmentTest.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignmentTest.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/05D7EFC9ACCDF8FBEBA414E1563071A3?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Ftext.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/text.js"
                },
                "region": {
                  "startLine": 270
                }
              }
            }
          ],
          "ruleId": "null_pointer_dereference_exception:return_value|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "15ce2d16f252edfbf70ba48f5a75d755d084d6ac139f14b4cb6745a9eb9615a1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/text.js"
                          },
                          "region": {
                            "startLine": 266
                          }
                        },
                        "message": {
                          "text": "Example 1: \"text.createXhr()\" has its value checked in \"(masterConfig.env === \"xhr\") || (!masterConfig.env && text.createXhr())\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/text.js"
                          },
                          "region": {
                            "startLine": 269
                          }
                        },
                        "message": {
                          "text": "\"text.createXhr\" returns \"null\" or \"undefined\" (checked 1 out of 2 times)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/text.js"
                          },
                          "region": {
                            "startLine": 269
                          }
                        },
                        "message": {
                          "text": "Assigning \"xhr\" to the \"null\" or \"undefined\" return value from \"text.createXhr\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/text.js"
                          },
                          "region": {
                            "startLine": 270
                          }
                        },
                        "message": {
                          "text": "Accessing a property of null-like value \"xhr\"."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/95BC143A3A86FF15F02C0466FE706A25?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInadequate%20Encryption%20Strength%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fit%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fintegration%2FJWTLessonIntegrationTest.java)\n\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/integration/JWTLessonIntegrationTest.java"
                },
                "region": {
                  "startLine": 253
                }
              }
            }
          ],
          "ruleId": "sigma.insufficient_asymmetric_key_size:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "2d3924cb9562288f2f2574fba020543f4784f63609cd5fa42025041560cfdb49"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/integration/JWTLessonIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 253
                          }
                        },
                        "message": {
                          "text": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/integration/JWTLessonIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 253
                          }
                        },
                        "message": {
                          "text": "Modify the application to adhere to the following minimum key size requirements:\n* 3072 bit key and 283 bit modulus for Diffie-Hellman and DSA algorithms.\n* 3072 bit key for RSA algorithms.\n* 256 bit domain parameters for elliptic curve algorithms."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/F85AC58AAD8A7B1B8210259AEAD957BB?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                },
                "region": {
                  "startLine": 52
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "a17ee7044af90367a9d163f6756db1c109ea0ce7bea25a4b0db352dff7d80589"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C4F2B10E3AED41F553D1600E11DD1B69?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DXML%20External%20Entity%20%28XXE%29%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fxxe%2FCommentsCache.java)\n\nThe application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                },
                "region": {
                  "startLine": 71
                }
              }
            }
          ],
          "ruleId": "sigma.xml_external_entity_enabled:input_factory|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "90eef25bdd5df21fc00d792468d7422e1e02bc2482fda60e5f7e95ed30d589c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "Disable external entities and DTDs by either: * setting the property `XMLInputFactory.SUPPORT_DTD` to `false`, or * by setting `XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES` to `false` and `XMLConstants.ACCESS_EXTERNAL_DTD` to an empty string."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/6B1BE535687ECCD3AF4AFE9610FE3F67?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "5ba1620a65ca4016236c222a9c9266f9e61a19e328061dc81815d9416b66f30d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 37
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::completed sinks operator"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 40
                          }
                        },
                        "message": {
                          "text": "'operator' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::injectableQuery"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/A81BAF1198FCBEC4122D13255530EC24?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTToken.java)\n\nThe instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                },
                "region": {
                  "startLine": 128
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_ignored_start_time:jose4j|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "d9c44abf930d1116ed01ccc0625df38a6772ed25e79fd8dfaf049cf194d15828"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                          },
                          "region": {
                            "startLine": 128
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                          },
                          "region": {
                            "startLine": 128
                          }
                        },
                        "message": {
                          "text": "Verify that the token's start time is valid by invoking the `setRequireNotBefore()` method on the `JwtConsumerBuilder`, when the token should only be valid after some point in time.\nInvoke the `setAllowedClockSkewInSeconds()` method, if the application needs to tolerate a small amount of clock skew."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/42952D519F55E27D92BD116CBBDF1DF9?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 142
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "bcea53508ced8e424747ef5b5c508b887c6587897b7e975554cd0cb11ed96955"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::completed sinks name"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "'name' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::injectableQueryConfidentiality sinks name"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 49
                          }
                        },
                        "message": {
                          "text": "assigning to query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::log sinks query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 132
                          }
                        },
                        "message": {
                          "text": "calling java.lang.String::replace"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 132
                          }
                        },
                        "message": {
                          "text": "assigning to action"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 137
                          }
                        },
                        "message": {
                          "text": "assigning to logQuery"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 142
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 142
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/D4CB3DF3549C1586F42F0BD885464E7F?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Flessons%2Fjwt%2Fjs%2Fjwt-kid.js)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/lessons/jwt/js/jwt-kid.js"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "xss:dom_xss|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "2138a6a6fdc7e0c2035bca2f665422c57193925012fe15addc6732053e3a6703"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/jwt/js/jwt-kid.js"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Calling at a later point \"startFollowing\". This call registers an event handler (through \"$.ajax({\"type\" : \"POST\", \"url\"...\")."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/jwt/js/jwt-kid.js"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Calling at a later point \"<anonymous>\". This call uses \"result\" for sensitive computation."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/jwt/js/jwt-kid.js"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability.\n* HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided.\n* JavaScript code execution: Validate any untrusted data against a whitelist so it's not possible for an attacker to have its supplied code executing.\n* URL manipulation: Make sure the scheme is whitelisted and doesn't allow for the injection of a URL like: \"data:text/html;,<img/src/onerror=alert(1)>\".\n"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/jwt/js/jwt-kid.js"
                          },
                          "region": {
                            "startLine": 5
                          }
                        },
                        "message": {
                          "text": "Parameter \"result\" is tainted when the callback function is called."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/E1E5FF930E5FAE559A763A92923A49A2?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fuser%2FUserServiceTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e9b107e7e55592c34cb0b10bc5b87dc1237e6ed7037905f7ef5c6a6b15c73a53"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/10EA92913D93D3BE546A3530DA6FA1FD?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 91
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_untrusted_decode:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "96ae268c0c57751d76598e9e7f3456bbbbdcc2c07b0d951a6085678579cd7942"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 91
                          }
                        },
                        "message": {
                          "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 91
                          }
                        },
                        "message": {
                          "text": "Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/5C90E29E6F67C264EC8B896D49133BF2?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 10929
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "3556aac28ac93741b702935477224f5371e88e44a111afa13cb188f5b1d1b6cf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 10929
                          }
                        },
                        "message": {
                          "text": "Reading variable \"idx\" and discarding the result. What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 10929
                          }
                        },
                        "message": {
                          "text": "Perhaps this code is incomplete or mistyped in some way."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/930E56CA05F692F0D9B816EFF686B0FA?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fmissingac%2FMissingFunctionAC.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                },
                "region": {
                  "startLine": 15
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "5f53c161d58f5c5a7b02b2dbfd46a33411a610c5737fc40dd203971954e44706"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 15
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 15
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/446FF0627949B7BD595957ACB688E282?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webgoat.properties)\n\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/application-webgoat.properties"
                },
                "region": {
                  "startLine": 46
                }
              }
            }
          ],
          "ruleId": "sigma.missing_tls:common_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "1e456a4eb8e4b6802ea7eeb9417fa38f71eee42fbf4d56de61ad035a043b1d9b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "Configure the URI to use a secure protocol with TLS protections."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/A193CBACBCCC00C9A9075D79403BDF6F?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fchallenges%2Fchallenge5%2FAssignment5.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "ef4a7798c9a70273d8e108b57a5d7f70c87bb01970322f111d60ff39340b88b8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 32
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.challenges.challenge5.Assignment5::login sinks password_login"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "'password_login' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/7381BC2F0111CB55A668297A734C1E7A?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                },
                "region": {
                  "startLine": 117
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "56e042af1cdec7adc4b4d4a364ff8c8dcc692d50bc369f326af1113d446a414a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 117
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Bearer token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 117
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/DAFC6100A2DCEAE19E2F14DE267D526C?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fchallenges%2Fchallenge5%2FAssignment5.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                },
                "region": {
                  "startLine": 46
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "844a7647eef6a9ec6b195f9dbf37877c9d4f8fad2bbeef428315b5fcdb3dec8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 32
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.challenges.challenge5.Assignment5::login sinks username_login"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "'username_login' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/012A6641298371A5AF4A848F24F980CE?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                },
                "region": {
                  "startLine": 115
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "1e1563bf4036a12b5b9631d2bef291580945e44b07468e206015651be8fed18c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 115
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 115
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/D141CE276A85CA3E1EB9CF21701971E3?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 139
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_untrusted_decode:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "ca0175cc35475a872297dbbb0bee7534ed7a9f0f9f028c492aa3e0dbf50dc243"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 139
                          }
                        },
                        "message": {
                          "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 139
                          }
                        },
                        "message": {
                          "text": "Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/AFC2C79A90630FDA6E342EF58C83ABBC?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fplugins%2Fbootstrap-slider%2Fjs%2Fbootstrap-slider.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js"
                },
                "region": {
                  "startLine": 290
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "5c1783dd7d77d6c16823924f20a27c390f908ac83ee238ecdb421faa3543ea11"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js"
                          },
                          "region": {
                            "startLine": 290
                          }
                        },
                        "message": {
                          "text": "Accessing data with \"this.element\" and discarding the result. What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js"
                          },
                          "region": {
                            "startLine": 290
                          }
                        },
                        "message": {
                          "text": "Perhaps this code is incomplete or mistyped in some way."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/6C824CAFA9C5D294DB2612F043CD1EC0?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTToken.java)\n\nThe application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                },
                "region": {
                  "startLine": 128
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_no_claims_validation:jose4j|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "d2402554bd3fa7d01c1fa025cef78bac5e7ad284879ee0a4a6997781e0dcced1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                          },
                          "region": {
                            "startLine": 128
                          }
                        },
                        "message": {
                          "text": "The application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                          },
                          "region": {
                            "startLine": 128
                          }
                        },
                        "message": {
                          "text": "Avoid invoking `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` which disable JSON Web Token claims validation."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/83D09F41F5BBDB4C8F476A228453A328?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Flessons%2Fjwt%2Fjs%2Fjwt-jku.js)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/lessons/jwt/js/jwt-jku.js"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "xss:dom_xss|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "f686fbf09bce512ac49f24028f00b11c861c661c5c312a5e3c716f3c84777960"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/jwt/js/jwt-jku.js"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Calling at a later point \"follow\". This call registers an event handler (through \"$.ajax({\"type\" : \"POST\", \"url\"...\")."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/jwt/js/jwt-jku.js"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Calling at a later point \"<anonymous>\". This call uses \"result\" for sensitive computation."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/jwt/js/jwt-jku.js"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability.\n* HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided.\n* JavaScript code execution: Validate any untrusted data against a whitelist so it's not possible for an attacker to have its supplied code executing.\n* URL manipulation: Make sure the scheme is whitelisted and doesn't allow for the injection of a URL like: \"data:text/html;,<img/src/onerror=alert(1)>\".\n"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/jwt/js/jwt-jku.js"
                          },
                          "region": {
                            "startLine": 5
                          }
                        },
                        "message": {
                          "text": "Parameter \"result\" is tainted when the callback function is called."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/460942D9AF489CF76A903C110703695D?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fchallenges%2Fchallenge7%2FAssignment7.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"
                },
                "region": {
                  "startLine": 36
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "f73c2977d8104ab3941d2fb2e31e8753c7e6be139d3bbc7061e3072df1c6990f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"
                          },
                          "region": {
                            "startLine": 36
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"
                          },
                          "region": {
                            "startLine": 36
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/08D6D8253668294C619800C25654DD92?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fadvanced%2FSqlInjectionLesson6a.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "3ab55e79f3f9c11cef978a5351f904e9c21e48d5d4d836f9c958c16d459934e1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                          },
                          "region": {
                            "startLine": 29
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlOnlyInputValidation::attack sinks userId"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                          },
                          "region": {
                            "startLine": 31
                          }
                        },
                        "message": {
                          "text": "'userId' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a::injectableQuery sinks userId"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/45D504FD04BBE17EF430C4EECC3D4AE4?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                },
                "region": {
                  "startLine": 105
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "9c3f9bbffb2138a4baf9eb71c848aacd70fdf49ef1c5e4fbe95013e2af1ed08f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 105
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Bearer token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 105
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/8F0CE4205B56D0377D645A1DF8FA80A4?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webgoat.properties)\n\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/application-webgoat.properties"
                },
                "region": {
                  "startLine": 46
                }
              }
            }
          ],
          "ruleId": "sigma.missing_tls:common_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "3630f0f5f5ac81a59d14dcfe4d6a97cb7d5d5b34416708e681670cff21a5c2e0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 46
                          }
                        },
                        "message": {
                          "text": "Configure the URI to use a secure protocol with TLS protections."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/62BF87F88346CFF29DF35B7C100BA9C0?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 142
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "bcea53508ced8e424747ef5b5c508b887c6587897b7e975554cd0cb11ed96955"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::completed sinks auth_tan"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "'auth_tan' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::injectableQueryIntegrity sinks auth_tan"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "assigning to queryInjection"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 64
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::log sinks queryInjection"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 132
                          }
                        },
                        "message": {
                          "text": "calling java.lang.String::replace"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 132
                          }
                        },
                        "message": {
                          "text": "assigning to action"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 137
                          }
                        },
                        "message": {
                          "text": "assigning to logQuery"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 142
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 142
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/F812EF168682BE050E5AE364DB8AFB4E?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                },
                "region": {
                  "startLine": 101
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e716d1c6f663b5d286bea560c6c7351cb5d0577702d8c72132bcdec93f811bcf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 101
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Access token (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                          },
                          "region": {
                            "startLine": 101
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/BF00614C68BC1B18AA97B7B4DFE4C97E?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 142
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "bcea53508ced8e424747ef5b5c508b887c6587897b7e975554cd0cb11ed96955"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::completed sinks name"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "'name' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::injectableQueryIntegrity sinks name"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "assigning to queryInjection"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 64
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::log sinks queryInjection"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 132
                          }
                        },
                        "message": {
                          "text": "calling java.lang.String::replace"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 132
                          }
                        },
                        "message": {
                          "text": "assigning to action"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 137
                          }
                        },
                        "message": {
                          "text": "assigning to logQuery"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 142
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 142
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/35EA2234401F8E98A24CC70EEF10B700?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 142
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "bcea53508ced8e424747ef5b5c508b887c6587897b7e975554cd0cb11ed96955"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::completed sinks auth_tan"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "'auth_tan' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::injectableQueryConfidentiality sinks auth_tan"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 49
                          }
                        },
                        "message": {
                          "text": "assigning to query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::log sinks query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 132
                          }
                        },
                        "message": {
                          "text": "calling java.lang.String::replace"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 132
                          }
                        },
                        "message": {
                          "text": "assigning to action"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 137
                          }
                        },
                        "message": {
                          "text": "assigning to logQuery"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 142
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 142
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/9825BCF4DAC273F8F963BC2EF126BDAA?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsecure%20Encryption%20Algorithm%20in%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fcryptography%2FHashingAssignment.java)\n\nThis application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 39
                }
              }
            }
          ],
          "ruleId": "sigma.weak_hash:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "ed65839e11c45f72cd1a40212bca936b31b5b5fad5b875c3aa6b806a1e07166b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "Use strong algorithms such as `SHA-256` to prevent collision attacks."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/2570FB8187832AD75561B74334162FBB?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fadvanced%2FSqlInjectionLesson6b.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                },
                "region": {
                  "startLine": 42
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "c49c238daabe78c2cd45d02a59fddd2073feac159654a3f3f8db24f7fa796707"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C89178A5606F1513B8DFD737093106E0?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcontainer%2Fusers%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                },
                "region": {
                  "startLine": 42
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "7494b021728ac67c7f88a8a7f3b5d94534834b73d2dffc7f70c4dcbd40900a7d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C2C8D576FC83494FCE2EDBE948C1E83A?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fit%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fplaywright%2Fwebwolf%2FJwtUITest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/playwright/webwolf/JwtUITest.java"
                },
                "region": {
                  "startLine": 21
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_medium|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e4d023dc8b62f550a955842f8fa3d3eac711b182e4ae6fbd9796c2b5a0b45e94"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/playwright/webwolf/JwtUITest.java"
                          },
                          "region": {
                            "startLine": 21
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: JWT token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/playwright/webwolf/JwtUITest.java"
                          },
                          "region": {
                            "startLine": 21
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/12CB0ACDAEEEA8B5FAF6FED12755A45B?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                },
                "region": {
                  "startLine": 103
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "765491cb6f3ee99e59f5972d38f7ef49ab0eb61eb2bf24ef4f253d378a30f506"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 103
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                          },
                          "region": {
                            "startLine": 103
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/12E86D5C1F64AF7E15C0B3CA83C5A4A7?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 110
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e435690583f7d1914d7f167b77c4baad92d60f3e4479d81fd47be1a542c1591e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 110
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 110
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/D093097D93272A80549685C867F2898A?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 9502
                }
              }
            }
          ],
          "ruleId": "null_pointer_dereference_exception:return_value|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "fa7ed46780bee40c52c617a5207592d8a6cb15edd683fd3cdb2dcf8cb4e1aea6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7473
                          }
                        },
                        "message": {
                          "text": "Example 2 (cont.): \"token\" has its value checked in \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7481
                          }
                        },
                        "message": {
                          "text": "Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9467
                          }
                        },
                        "message": {
                          "text": "Condition \"token\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9467
                          }
                        },
                        "message": {
                          "text": "Condition \"/^comment|string/.test(type)\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9469
                          }
                        },
                        "message": {
                          "text": "Condition \"type == \"comment\"\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9473
                          }
                        },
                        "message": {
                          "text": "Condition \"dir != 1\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9474
                          }
                        },
                        "message": {
                          "text": "Condition \"token\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9474
                          }
                        },
                        "message": {
                          "text": "Example 3 (cont.): \"token\" has its value checked in \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9475
                          }
                        },
                        "message": {
                          "text": "Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9485
                          }
                        },
                        "message": {
                          "text": "Condition \"dir != -1\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9487
                          }
                        },
                        "message": {
                          "text": "Condition \"token\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9489
                          }
                        },
                        "message": {
                          "text": "Condition \"lastRow == -1\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9491
                          }
                        },
                        "message": {
                          "text": "Condition \"!re.test(state)\", taking true branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9493
                          }
                        },
                        "message": {
                          "text": "Falling through to end of if statement."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9497
                          }
                        },
                        "message": {
                          "text": "\"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9497
                          }
                        },
                        "message": {
                          "text": "Assigning \"token\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9498
                          }
                        },
                        "message": {
                          "text": "Falling through to end of if statement."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9502
                          }
                        },
                        "message": {
                          "text": "Accessing a property of null-like value \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9833
                          }
                        },
                        "message": {
                          "text": "Example 1 (cont.): \"token\" has its value checked in \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9834
                          }
                        },
                        "message": {
                          "text": "Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13413
                          }
                        },
                        "message": {
                          "text": "Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13431
                          }
                        },
                        "message": {
                          "text": "Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 13434
                          }
                        },
                        "message": {
                          "text": "Example 5 (cont.): \"token\" has its value checked in \"token\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 14569
                          }
                        },
                        "message": {
                          "text": "Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 14571
                          }
                        },
                        "message": {
                          "text": "Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/4DAC54908F353C62A8F4CA9BA720EB24?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcontainer%2Fusers%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                },
                "region": {
                  "startLine": 29
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "6dfdbade0e4e452209b1784e40a6b3608640a040337fc6eaa1d42484ae110e62"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                          },
                          "region": {
                            "startLine": 29
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                          },
                          "region": {
                            "startLine": 29
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/E9D47DA65C98834B5BCAF4408E0638E3?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DCopy-Paste%20Error%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nA copied piece of code is inconsistent with the original"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 7159
                }
              }
            }
          ],
          "ruleId": "copy_paste_error|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "c3180f3b9f1670b505ae9ad24b70e6413573dfe8ebc73c54ff36549be2e2901e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7156
                          }
                        },
                        "message": {
                          "text": "\"cursor.column\" looks like the original copy."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7159
                          }
                        },
                        "message": {
                          "text": "\"column\" in \"cursor.column\" looks like a copy-paste error."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7159
                          }
                        },
                        "message": {
                          "text": "Should it say \"row\" instead?"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C5C641C30795221DF213DE3F1CE64BE9?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2Fclaimmisuse%2FJWTHeaderJKUEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpointTest.java"
                },
                "region": {
                  "startLine": 82
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e04dbfb1941c6d26bdbde8f89e6dd790ac7108af6984546fdf515b9f226a743d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpointTest.java"
                          },
                          "region": {
                            "startLine": 82
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpointTest.java"
                          },
                          "region": {
                            "startLine": 82
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/370BE643DD9AAD435AB21B7BE0952F54?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webgoat.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/application-webgoat.properties"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ],
          "ruleId": "sigma.verbose_error_message:spring_boot_stacktrace_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "eeaf3683aa51317d2890504952ad1a0989d7b0418a7bee6fc9b2fb900e67dc20"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 1
                          }
                        },
                        "message": {
                          "text": "Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/0D6A5A0173F4CD1804D4B5A8FFD5B05B?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson2.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                },
                "region": {
                  "startLine": 49
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "975c6eb343ac7ed3178358175f41d601960ee492e2c3e15d42763e22104bcba8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 40
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson2::completed sinks query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "'query' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson2::injectableQuery sinks query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 49
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 49
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/B455CB186A6C205626B247DDCC528DAF?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "f83ae4f3c3f21d8c1ce6a0e283b47d5ad137db3fc2ba17c40a0bcbec393fcd01"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::completed sinks name"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "'name' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::injectableQueryConfidentiality sinks name"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 49
                          }
                        },
                        "message": {
                          "text": "assigning to query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/FCE68DC26EDEBA28F87FD8908E20DF91?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2Fclaimmisuse%2FJWTHeaderKIDEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpointTest.java"
                },
                "region": {
                  "startLine": 26
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_medium|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "050be3399ce2c44b625ba8354cc525f6300da7476e85179caa5378b2722e8157"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpointTest.java"
                          },
                          "region": {
                            "startLine": 26
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: JWT token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpointTest.java"
                          },
                          "region": {
                            "startLine": 26
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/5C5B8B32CD05EF508722BF1EEE8672A2?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson10.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                },
                "region": {
                  "startLine": 56
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "2d7d3fb3f731aa7cd2637d14aff0bb40d9c72c12b28022968bb3ee6f9d309a11"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson10::completed sinks action_string"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "'action_string' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson10::injectableQueryAvailability sinks action_string"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 49
                          }
                        },
                        "message": {
                          "text": "assigning to query"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/0B49DC38A16F511DD62B13374A5D86C7?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fdeserialization%2FDeserializeTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                },
                "region": {
                  "startLine": 74
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "366720fbe67ff2f8eac431bd5f13f691cbc8fa3b02cb0712009e590a2c0dcca4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                          },
                          "region": {
                            "startLine": 74
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Token (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                          },
                          "region": {
                            "startLine": 74
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/FBDFC887003FCB10F9A6D2F6D390F07D?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 121
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_untrusted_decode:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "79d845daff39cc7d4cad1bed16202465ffb0ae3520f08c3243d5d9c3b71313cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 121
                          }
                        },
                        "message": {
                          "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 121
                          }
                        },
                        "message": {
                          "text": "Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/3AA47B43784A57F541BF82A19ED61787?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fdeserialization%2FDeserializeTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                },
                "region": {
                  "startLine": 88
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "85ec56c7518a2332878e893880f992df348bbdc7477881f616bb5f93914ec749"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                          },
                          "region": {
                            "startLine": 88
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Token (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/deserialization/DeserializeTest.java"
                          },
                          "region": {
                            "startLine": 88
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/EE70AB4B5C5960E5C145494F07BEB993?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 187
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_untrusted_decode:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "faae7085811218039e3a4a4aefff8bb4b5c448a91f077d3893df88b3e07ee3ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 187
                          }
                        },
                        "message": {
                          "text": "The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 187
                          }
                        },
                        "message": {
                          "text": "Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/705014FB558096FA319A55338A86CB26?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5b.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                },
                "region": {
                  "startLine": 45
                }
              }
            }
          ],
          "ruleId": "sigma.sqli:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "e638f3cd90b241621b853e76befa7de38707d0198a68391744b0941913fc009e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 37
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::completed sinks userid"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "'userid' is tainted"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::injectableQuery sinks userid"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/C3128819C43DB737D7D7C332A882762C?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInadequate%20Encryption%20Strength%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2Fclaimmisuse%2FJWTHeaderJKUEndpointTest.java)\n\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpointTest.java"
                },
                "region": {
                  "startLine": 52
                }
              }
            }
          ],
          "ruleId": "sigma.insufficient_asymmetric_key_size:core_java|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "7c63b961c6bdece86f0294d3196d6b5fd29acc3effb5280b8893d0e4b10a8ceb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpointTest.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpointTest.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Modify the application to adhere to the following minimum key size requirements:\n* 3072 bit key and 283 bit modulus for Diffie-Hellman and DSA algorithms.\n* 3072 bit key for RSA algorithms.\n* 256 bit domain parameters for elliptic curve algorithms."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/1AF030D0EEC825C363C4295F949C2408?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                },
                "region": {
                  "startLine": 44
                }
              }
            }
          ],
          "ruleId": "sigma.jwt_non_expiring_token:io_jsonwebtoken|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "ce53433ae3bb59f3ea72da8a96fc311e4f09c76f5b1796b2805e005a192558d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                          },
                          "region": {
                            "startLine": 44
                          }
                        },
                        "message": {
                          "text": "Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/15C6FDFEFA6CB8EBB971D3A3766DDACF?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nPerforming an operation that would be invalid on a null or undefined value."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 7631
                }
              }
            }
          ],
          "ruleId": "null_pointer_dereference_exception:constant|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "8aa973c181d2f150bc1a85f8b59c024cc603fe9829b6822de4042a2749ee78a0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7607
                          }
                        },
                        "message": {
                          "text": "Condition \"!this.completionKeywords\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7609
                          }
                        },
                        "message": {
                          "text": "Assigning: \"completionKeywords\" = \"undefined\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7629
                          }
                        },
                        "message": {
                          "text": "Condition \"!append\", taking false branch."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 7631
                          }
                        },
                        "message": {
                          "text": "Accessing a property of null-like value \"completionKeywords\"."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/5E647A92F75CCA211D6CD5EBCC5DBF5E?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Flessons%2Fsqlinjection%2Fhtml%2FSqlInjectionAdvanced.html)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html"
                },
                "region": {
                  "startLine": 42
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|html",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "bdba3b7e1f982bc910d941536fd2873f9716324b1e80a39def426e65daee508e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/BD1EA5C216AB08BD60138B0105CC6D60?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webgoat.properties)\n\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "target/classes/application-webgoat.properties"
                },
                "region": {
                  "startLine": 41
                }
              }
            }
          ],
          "ruleId": "sigma.missing_tls:common_properties|text",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "b05c660a5eae341bd04be8c28a1481a93fa0fa5e847b6a44c55613c53d4816d2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "target/classes/application-webgoat.properties"
                          },
                          "region": {
                            "startLine": 41
                          }
                        },
                        "message": {
                          "text": "Configure the URI to use a secure protocol with TLS protections."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/D0210096CE26A3BDFF6ED6B05F267C97?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 9100
                }
              }
            }
          ],
          "ruleId": "no_effect|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "39edb96212d7d4116305317f6553a03d851a6881fad8b5303fe355419c341e3e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9100
                          }
                        },
                        "message": {
                          "text": "Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 9100
                          }
                        },
                        "message": {
                          "text": "Perhaps this code is incomplete or mistyped in some way."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/9FF2DAE2CAA1B650873C387265C8080E?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fpasswordreset%2FResetLinkAssignment.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 45
                }
              }
            }
          ],
          "ruleId": "sigma.hardcoded_secret:pattern_low|java",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "5799d5f4626f1afedc549b77c83d361fb78fe0c847ea4b557f6ce87769dd8cf6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/69ccae14-80ce-449a-ba0c-217e76aed354/projects/13576d4e-56c4-46d5-8b22-3e2b45e1cc55/issues/8B2F36EE49F290B609AF3FDC0E8575FC?branchId=69b1795a-7347-404b-a904-f1aa7521c571&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nCode can never be reached because of a logical contradiction"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                },
                "region": {
                  "startLine": 45
                }
              }
            }
          ],
          "ruleId": "deadcode:logical_contradiction|javascript",
          "partialFingerprints": {
            "ruleIdLocationHash/v1": "50d8aac322028f3c2b1387b567bbd4f9b32a31e83adf452445f53a0357e8ab2b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 39
                          }
                        },
                        "message": {
                          "text": "Assigning: \"ACE_NAMESPACE\" = \"\"ace\"\"."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "At condition \"ACE_NAMESPACE\", the truth value of \"ACE_NAMESPACE\" must be true."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "At condition \"ACE_NAMESPACE\", the type of \"ACE_NAMESPACE\" must be string."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "The condition \"!ACE_NAMESPACE\" cannot be true."
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/resources/webgoat/static/js/libs/ace.js"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "Execution cannot reach the expression \"typeof requirejs !== \"undefined\"\" inside this statement: \"if (!ACE_NAMESPACE && (type...\"."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "version": "2.1.0"
}
